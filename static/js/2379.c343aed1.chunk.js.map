{"version":3,"file":"static/js/2379.c343aed1.chunk.js","mappings":"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","sources":["components/App/pages/History/index.js","components/ChatHistory/index.js","webpack://@kne-components/leapin-ai-agent/./src/components/LeftMenu/style.module.scss?35e3","components/LeftMenu/index.js","webpack://@kne-components/leapin-ai-agent/./src/components/PageHeader/style.module.scss?df1b","components/PageHeader/index.js","webpack://@kne-components/leapin-ai-agent/./src/components/ChatHistory/style.module.scss?65f2"],"sourcesContent":["import { createWithRemoteLoader } from '@kne/remote-loader';\nimport { useContext } from '../../context';\nimport LeftMenu from '@components/LeftMenu';\nimport History from '@components/ChatHistory';\n\nconst HistoryPage = createWithRemoteLoader({\n  modules: ['Layout@Page']\n})(({ remoteModules }) => {\n  const { baseUrl } = useContext();\n  const [Page] = remoteModules;\n  return (\n    <Page menuWidth=\"200px\" menuCloseWidth=\"80px\" backgroundColor=\"transparent\" menu={({ open }) => <LeftMenu baseUrl={baseUrl} open={open} />}>\n      <History baseUrl={baseUrl} />\n    </Page>\n  );\n});\n\nexport default HistoryPage;\n","import { createWithRemoteLoader } from '@kne/remote-loader';\nimport { useState } from 'react';\nimport { Flex, Pagination, Button, Space } from 'antd';\nimport PageHeader from '@components/PageHeader';\nimport Fetch from '@kne/react-fetch';\nimport get from 'lodash/get';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { MessageList } from '@components/ChatBot';\nimport style from './style.module.scss';\n\nconst ChartHistory = createWithRemoteLoader({\n  modules: ['components-core:InfoPage@TableView', 'components-core:Global@usePreset', 'components-core:Common@SearchInput', 'components-core:Modal@useModal', 'components-core:StateTag']\n})(({ remoteModules, baseUrl }) => {\n  const [TableView, usePreset, SearchInput, useModal, StateTag] = remoteModules;\n  const { apis } = usePreset();\n  const [keyword, setKeyword] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const modal = useModal();\n  const page = searchParams.get('page') || 1,\n    pageSize = 10;\n  return (\n    <Flex className={style['history']} vertical gap={24}>\n      <PageHeader title=\"The Chat History\" description=\"The chat history recoird the running status of the application, including user inputs and AI replies.\" />\n      <Flex className={style['filter']} justify=\"space-between\">\n        <div></div>\n        <div>\n          <SearchInput className={style['search-input']} value={keyword} placeholder=\"search\" onSearch={setKeyword} />\n        </div>\n      </Flex>\n      <Fetch\n        {...Object.assign({}, apis.agent.getSessionList, {\n          params: { page, page_size: pageSize, keyword }\n        })}\n        render={({ data }) => {\n          return (\n            <Flex vertical gap={8}>\n              <TableView\n                dataSource={data.results}\n                columns={[\n                  {\n                    name: 'name',\n                    title: 'Name',\n                    getValueOf: item => {\n                      const info = get(item, 'agent_application.application') || get(item, 'agent_application.employee');\n\n                      return info?.name;\n                    }\n                  },\n                  {\n                    name: 'phone',\n                    title: 'Phone',\n                    getValueOf: item => {\n                      const info = get(item, 'agent_application.application') || get(item, 'agent_application.employee');\n\n                      return info?.mobile;\n                    }\n                  },\n                  {\n                    name: 'email',\n                    title: 'Email',\n                    getValueOf: item => {\n                      const info = get(item, 'agent_application.application') || get(item, 'agent_application.employee');\n\n                      return info?.email;\n                    }\n                  },\n                  {\n                    name: 'role',\n                    title: 'Role',\n                    getValueOf: item => {\n                      return (\n                        <Space wrap>\n                          {(get(item, 'agent_application.agent.role') || []).map(role => (\n                            <div key={role} className={style['tag']}>\n                              {role}\n                            </div>\n                          ))}\n                        </Space>\n                      );\n                    }\n                  },\n                  {\n                    name: 'agentName',\n                    title: 'Agent Name',\n                    getValueOf: item => {\n                      return <Link to={`${baseUrl}/detail?id=${get(item, 'agent_application.agent.id')}`}>{get(item, 'agent_application.agent.name')}</Link>;\n                    }\n                  },\n                  {\n                    name: 'status',\n                    title: 'Status',\n                    render: status => {\n                      if (status === 0) {\n                        return <StateTag text=\"Not started\" />;\n                      }\n                      if (status === 1) {\n                        return <StateTag type=\"progress\" text=\"In progress\" />;\n                      }\n\n                      if (status === 2) {\n                        return <StateTag type=\"success\" text=\"Completed\" />;\n                      }\n\n                      return <StateTag text=\"Unknown\" />;\n                    }\n                  },\n                  {\n                    name: 'messages',\n                    title: 'Chat History',\n                    getValueOf: item => {\n                      return (\n                        <Button\n                          className=\"btn-no-padding\"\n                          type=\"link\"\n                          onClick={() => {\n                            modal({\n                              title: 'Chat History',\n                              footer: null,\n                              children: <MessageList agentAvatar={get(item, 'agent_application.agent.avatar')} list={item.messages} startTime={item.start_time} />\n                            });\n                          }}\n                        >\n                          Check\n                        </Button>\n                      );\n                    }\n                  },\n                  {\n                    name: 'start_time',\n                    title: 'Start Time',\n                    format: 'date-DD.MM.YYYY()HH:mm'\n                  },\n                  {\n                    name: 'end_time',\n                    title: 'End Time',\n                    format: 'date-DD.MM.YYYY()HH:mm'\n                  }\n                ]}\n              />\n              <Flex justify=\"flex-end\">\n                <Pagination\n                  showSizeChanger={false}\n                  hideOnSinglePage\n                  total={data.count}\n                  current={page}\n                  pageSize={pageSize}\n                  onChange={page => {\n                    const newSearchParams = new URLSearchParams(searchParams);\n                    newSearchParams.set('page', page);\n                    setSearchParams(newSearchParams);\n                  }}\n                />\n              </Flex>\n            </Flex>\n          );\n        }}\n      />\n    </Flex>\n  );\n});\n\nexport default ChartHistory;\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"style_menu__mjcZV__pIGCk\",\"is-close\":\"style_is-close__8f5gV__pIGCk\"};","import { Menu, Avatar } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport classnames from 'classnames';\nimport ai from './ai.png';\nimport aiActive from './aiActive.png';\nimport chat from './chat.png';\nimport chatActive from './chatActive.png';\nimport style from './style.module.scss';\n\nconst LeftMenu = ({ open, baseUrl }) => {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const activeKey = pathname.indexOf(`${baseUrl}/history`) === 0 ? 'history' : 'agent';\n\n  return (\n    <Menu\n      className={classnames(style['menu'], {\n        [style['is-close']]: !open\n      })}\n      selectedKeys={[activeKey]}\n      items={[\n        {\n          icon: <Avatar src={activeKey === 'history' ? chatActive : chat} />,\n          label: 'Chat History',\n          key: 'history',\n          onClick: () => {\n            navigate(`${baseUrl}/history`);\n          }\n        },\n        {\n          icon: <Avatar src={activeKey === 'agent' ? aiActive : ai} />,\n          label: 'AI Agent',\n          key: 'agent',\n          onClick: () => {\n            navigate(`${baseUrl}`);\n          }\n        }\n      ]}\n    />\n  );\n};\n\nexport default LeftMenu;\n","// extracted by mini-css-extract-plugin\nexport default {\"page-header\":\"style_page-header__dlhVC__pIGCk\",\"title\":\"style_title__j7bir__pIGCk\"};","import style from './style.module.scss';\nimport { Flex } from 'antd';\nimport classnames from 'classnames';\n\nconst PageHeader = ({ className, title, description }) => {\n  return (\n    <Flex vertical gap={4} className={classnames(className, style['page-header'])}>\n      <div className={style['title']}>\n        <i />\n        {title}\n      </div>\n      {description && <div className={style['description']}>{description}</div>}\n    </Flex>\n  );\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"history\":\"style_history__SSRYv__pIGCk\",\"title\":\"style_title__wQ4KP__pIGCk\",\"search-input\":\"style_search-input__ZmilC__pIGCk\",\"tag\":\"style_tag__Y1EjT__pIGCk\"};"],"names":["createWithRemoteLoader","modules","_ref","remoteModules","baseUrl","useContext","Page","_jsx","menuWidth","menuCloseWidth","backgroundColor","menu","_ref2","open","LeftMenu","children","History","TableView","usePreset","SearchInput","useModal","StateTag","apis","keyword","setKeyword","useState","searchParams","setSearchParams","useSearchParams","modal","page","get","_jsxs","Flex","className","style","vertical","gap","PageHeader","title","description","justify","value","placeholder","onSearch","Fetch","_objectSpread","Object","assign","agent","getSessionList","params","page_size","render","data","dataSource","results","columns","name","getValueOf","item","info","mobile","email","Space","wrap","map","role","Link","to","concat","status","text","type","Button","onClick","footer","MessageList","agentAvatar","list","messages","startTime","start_time","format","Pagination","showSizeChanger","hideOnSinglePage","total","count","current","pageSize","onChange","newSearchParams","URLSearchParams","set","pathname","useLocation","navigate","useNavigate","activeKey","indexOf","Menu","classnames","selectedKeys","items","icon","Avatar","src","label","key"],"sourceRoot":""}