{"version":3,"file":"static/js/4666.1fecba1d.chunk.js","mappings":"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","sources":["components/App/context.js","../node_modules/lodash/transform.js","components/Apis/getApis.js","preset.js","pages/index.js","MainLayout.js","components/App/pages/index.js","components/App/index.js","webpack://@kne-components/leapin-ai-agent/./src/components/ChatBotClient/style.module.scss?eb00","components/ChatBotClient/index.js","App.js","bootstrap.js","components/ChatBot/index.js","../node_modules/react-dom/client.js"],"sourcesContent":["import { createContext, useContext as useReactContext } from 'react';\n\nconst context = createContext({});\n\nexport const { Provider, Consumer } = context;\n\nexport const useContext = () => {\n  return useReactContext(context);\n};\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","const getApis = options => {\n  const { prefix } = Object.assign({}, { prefix: '/api' }, options);\n  return {\n    addAgent: {\n      url: `${prefix}/agent/add/`,\n      method: 'POST'\n    },\n    saveAgent: {\n      url: `${prefix}/agent/{agent_id}/update/`,\n      method: 'POST'\n    },\n    duplicateAgent: {\n      url: `${prefix}/agent/{agent_id}/duplicate/`,\n      method: 'PUT'\n    },\n    removeAgent: {\n      url: `${prefix}/agent/{agent_id}/delete/`,\n      method: 'DELETE'\n    },\n    getAgentDetail: {\n      url: `${prefix}/agent/{agent_id}/detail/`\n    },\n    getAgentList: {\n      url: `${prefix}/agent/list/`,\n      method: 'GET'\n    },\n    setAgentConfig: {\n      url: `${prefix}/agent/{agent_id}/config/`,\n      method: 'POST'\n    },\n    uploadKnowledge: {\n      url: `${prefix}/agent/{agent_id}/knowledge/add/`,\n      method: 'POST'\n    },\n    removeKnowledge: {\n      url: `${prefix}/agent/knowledge/{knowledge_id}/delete/`,\n      method: 'DELETE'\n    },\n    getKnowledgeList: {\n      url: `${prefix}/agent/{agent_id}/knowledge/list/`,\n      method: 'GET'\n    },\n    saveKnowledge: {\n      url: `${prefix}/agent/knowledge/{knowledge_id}/update/`,\n      method: 'PUT'\n    },\n    getSessionList: {\n      url: `${prefix}/agent/saas/session/list/`,\n      method: 'GET'\n    },\n    getApplicationList: {\n      url: `${prefix}/agent/{agent_id}/application/list/`,\n      method: 'GET'\n    },\n    getApplicationDetail: {\n      url: `${prefix}/api/candidate/candidate/applications/detail/{applications_id}/`,\n      method: 'GET'\n    },\n    chatBot: {\n      addSession: {\n        url: `${prefix}/api/agent/saas/session/add/`,\n        method: 'POST'\n      },\n      getSessionDetail: {\n        url: `${prefix}/agent/saas/session/{session_id}/detail/`,\n        method: 'GET'\n      },\n      sendSessionMessage: {\n        url: `${prefix}/agent/saas/session/{session_id}/message/send/`,\n        method: 'POST'\n      },\n      sendSessionMessageStream: {\n        url: `${prefix}/agent/saas/session/{session_id}/stream_message/send/`,\n        method: 'POST'\n      },\n      getSideInfo: {\n        url: `${prefix}/api/agent/{agent_id}/message/intent_identification/`,\n        method: 'GET'\n      },\n      saveSession: {\n        url: `${prefix}/agent/saas/session/{session_id}/update/`,\n        method: 'PUT'\n      }\n    },\n    job: {\n      getJobList: {\n        url: `${prefix}/jobs/jobs/status/filter/`,\n        method: 'GET'\n      },\n      deliverJob: {\n        url: `${prefix}/jobs/application_record/bulk_add/`,\n        method: 'POST'\n      },\n      resend: {\n        url: `${prefix}/agent/{agent_id}/application/{application_id}/resend/`,\n        method: 'POST'\n      },\n      rejected: {\n        url: `${prefix}/candidate/candidate/applications/change_status/`,\n        method: 'POST'\n      }\n    },\n    chatBotClient: {\n      getTokenByCode: {\n        url: `${prefix}/agent/chatbot/code/verify/`,\n        method: 'POST'\n      },\n      getSessionDetail: {\n        url: `${prefix}/agent/chatbot/session/{session_id}/detail/`,\n        method: 'GET'\n      },\n      sendSessionMessage: {\n        url: `${prefix}/agent/chatbot/session/{session_id}/message/send/`,\n        method: 'POST'\n      },\n      sendSessionMessageStream: {\n        url: `${prefix}/agent/chatbot/session/{session_id}/stream_message/send/`,\n        method: 'POST'\n      },\n      getSideInfo: {\n        url: `${prefix}/api/agent/{agent_id}/message/intent_identification/`,\n        method: 'GET'\n      },\n      saveSession: {\n        url: `${prefix}/agent/chatbot/session/{session_id}/update/`,\n        method: 'PUT'\n      },\n      createChatBot: {\n        url: `${prefix}/agent/anonymous/code/`,\n        method: 'GET'\n      },\n      getSpeechToken: {\n        url: `${prefix}/agent/{agent_id}/asr/ali/token/`\n      }\n    }\n  };\n};\n\nexport default getApis;\n","import React from 'react';\nimport { preset as fetchPreset } from '@kne/react-fetch';\nimport { Spin, Empty, message } from 'antd';\nimport axios from 'axios';\nimport { preset as remoteLoaderPreset } from '@kne/remote-loader';\nimport omit from 'lodash/omit';\nimport transform from 'lodash/transform';\nimport qs from 'qs';\nimport cookie from 'js-cookie';\nimport ensureSlash from '@kne/ensure-slash';\nimport md5 from 'md5';\nimport { getApis as getAgentApis } from '@components/Apis';\n\nwindow.PUBLIC_URL = window.runtimePublicUrl || process.env.PUBLIC_URL;\n\nexport const defaultHeaders = headers => {\n  return Object.assign({}, headers, {\n    Authorization: `Bearer ${cookie.get('token')}`\n  });\n};\n\nexport const globalInit = async () => {\n  const ajax = (() => {\n    const instance = axios.create({\n      validateStatus: function () {\n        return true;\n      }\n    });\n\n    instance.interceptors.request.use(config => {\n      config.headers = Object.assign({}, defaultHeaders());\n      if (config.method.toUpperCase() !== 'GET' && !config.headers['Content-Type']) {\n        config.headers['Content-Type'] = 'application/json';\n      }\n      return config;\n    });\n\n    instance.interceptors.response.use(\n      response => {\n        if (response.status === 200 && response.data.code === 401) {\n          window.location.href = '/login';\n          return response;\n        }\n\n        if (response.status === 200 && response.data.code === 404) {\n          window.location.href = '/ai-agent/404';\n          return response;\n        }\n        if (response.status !== 200 || (response.data.hasOwnProperty('code') && response.data.code !== 0 && response.config.showError !== false)) {\n          message.error(response?.data?.msg || response?.data?.error_msg?.detail || response?.data?.error_msg || '请求发生错误');\n        }\n        return response;\n      },\n      error => {\n        message.error(error.message || '请求发生错误');\n        return Promise.reject(error);\n      }\n    );\n\n    const parseUrlParams = params => {\n      if (typeof params.urlParams === 'object' && Object.keys(params.urlParams).length > 0 && typeof params.url === 'string') {\n        params.url = params.url.replace(/{([\\s\\S]+?)}/g, (match, name) => {\n          return params.urlParams.hasOwnProperty(name) ? params.urlParams[name] : match;\n        });\n      }\n    };\n\n    const ajax = params => {\n      if (params.hasOwnProperty('loader') && typeof params.loader === 'function') {\n        return Promise.resolve(params.loader(omit(params, ['loader'])))\n          .then(data => ({\n            data: {\n              code: 0,\n              data\n            }\n          }))\n          .catch(err => {\n            message.error(err.message || '请求发生错误');\n            return { data: { code: 500, msg: err.message } };\n          });\n      }\n      parseUrlParams(params);\n      return instance(params);\n    };\n\n    ajax.postForm = config => {\n      parseUrlParams(config);\n      const { url, params, urlParams, data, method, ...options } = config;\n      const searchParams = new URLSearchParams(params);\n\n      const queryString = searchParams.toString();\n\n      return axios.postForm(`${url}${queryString ? '?' + queryString : ''}`, data, Object.assign({}, { headers: defaultHeaders() }, options));\n    };\n\n    ajax.parseUrlParams = parseUrlParams;\n\n    return ajax;\n  })();\n  fetchPreset({\n    ajax,\n    loading: (\n      <Spin\n        delay={500}\n        style={{\n          position: 'absolute',\n          left: '50%',\n          padding: '10px',\n          transform: 'translateX(-50%)'\n        }}\n      />\n    ),\n    error: null,\n    empty: <Empty />,\n    transformResponse: response => {\n      const { data } = response;\n      response.data = {\n        code: data.code === 0 ? 200 : data.code,\n        msg: data.msg,\n        results: data.data\n      };\n      return response;\n    }\n  });\n\n  const registry = {\n    url: 'https://cdn.leapin-ai.com',\n    tpl: '{{url}}/components/@kne-components/{{remote}}/{{version}}/build'\n  };\n\n  const componentsCoreRemote = {\n    ...registry,\n    //url: 'http://localhost:3001',\n    //tpl: '{{url}}',\n    remote: 'components-core',\n    defaultVersion: '0.3.12'\n  };\n  remoteLoaderPreset({\n    remotes: {\n      default: componentsCoreRemote,\n      'components-core': componentsCoreRemote,\n      'components-iconfont': {\n        ...registry,\n        remote: 'components-iconfont',\n        defaultVersion: '0.1.8'\n      },\n      'leapin-ai-agent':\n        process.env.NODE_ENV === 'development'\n          ? {\n              remote: 'leapin-ai-agent',\n              url: '/',\n              tpl: '{{url}}',\n              defaultVersion: process.env.DEFAULT_VERSION\n            }\n          : {\n              remote: 'leapin-ai-agent',\n              url: 'https://app.ap.leapin-ai.com',\n              tpl: '{{url}}/ai-agent'\n            }\n    }\n  });\n\n  return {\n    ajax,\n    enums: {\n      atsStage: [\n        { description: 'Primary screening', value: 0 },\n        { description: 'AI interview', value: 1 },\n        { description: 'Retest', value: 3 },\n        { description: 'Awaiting entry', value: 4 },\n        { description: 'Inappropriate', value: 5 },\n        { description: 'Offer', value: 8 },\n        { description: 'Inducted', value: 9 }\n      ]\n    },\n    apis: Object.assign(\n      {},\n      {\n        agent: getAgentApis(),\n        file: {\n          contentWindowUrl: 'https://cdn.leapin-ai.com/components/@kne/iframe-resizer/0.1.3/dist/contentWindow.js',\n          //pdfjsUrl: 'https://cdn.leapin-ai.com/components/pdfjs-dist/4.4.168',\n          upload: async ({ file }) => {\n            /*return {\n                                                                                      data: {\n                                                                                        code: 0,\n                                                                                        data: {\n                                                                                          src: 'https://user-video-staging.oss-cn-hangzhou.aliyuncs.com/tenant-89/candidate/cv/17700713ccc28c0ce29d6b87237bb8b5.pdf',\n                                                                                          filename: file.name\n                                                                                        }\n                                                                                      }\n                                                                                    };*/\n            const { data: resData } = await ajax(\n              Object.assign(\n                {},\n                {\n                  url: '/api/common/upload/token',\n                  params: { media_params: 'candidate-cv' },\n                  method: 'GET'\n                }\n              )\n            );\n            if (resData.code !== 0) {\n              return { code: resData.code, msg: resData.error_msg };\n            }\n            const ossConfig = resData.data;\n\n            const md5Hash = await new Promise((resolve, reject) => {\n              const fileReader = new FileReader();\n              fileReader.readAsBinaryString(file);\n              fileReader.onload = e => {\n                const md5Hash = md5(e.target.result);\n                resolve(md5Hash);\n              };\n              fileReader.onerror = () => {\n                reject();\n              };\n            });\n\n            const targetFileName = `${md5Hash}.${file.name.split('.').pop()}`;\n\n            const { data: uploadRes } = await ajax.postForm(\n              Object.assign(\n                {},\n                {\n                  url: ossConfig.host,\n                  data: {\n                    key: `${ensureSlash(ossConfig.dir, true)}${targetFileName}`,\n                    'x-oss-object-acl': 'public-read',\n                    policy: ossConfig.policy,\n                    OSSAccessKeyId: ossConfig.OSSAccessKeyId,\n                    signature: ossConfig.Signature,\n                    success_action_status: 201,\n                    file\n                  }\n                }\n              )\n            );\n            const parser = new DOMParser();\n            const xmlDoc = parser.parseFromString(uploadRes, 'text/xml');\n            xmlDoc.getElementsByTagName('Location');\n            return {\n              data: {\n                code: 0,\n                data: { src: xmlDoc.getElementsByTagName('Location')[0].textContent, filename: file.name }\n              }\n            };\n          }\n        }\n      }\n    ),\n    locale: 'en-US',\n    themeToken: {\n      colorPrimary: '#2257bf'\n    },\n    formInfo: {\n      type: 'default'\n    }\n  };\n};\n","import loadable from '@loadable/component';\nimport { Spin } from 'antd';\n\nconst loadableWithProps = func =>\n  loadable(func, {\n    fallback: <Spin style={{ position: 'absolute', left: '50%', transform: 'translateX(-50%)' }} />\n  });\n\nconst pages = {\n  Error: loadableWithProps(() => import('./Error')),\n  NotFound: loadableWithProps(() => import('./NotFound'))\n};\n\nexport default pages;\n","import { createWithRemoteLoader } from '@kne/remote-loader';\nimport { Outlet } from 'react-router-dom';\n\nexport const GlobalPage = createWithRemoteLoader({\n  modules: ['components-core:Global']\n})(({ remoteModules, preset, ...props }) => {\n  const [Global] = remoteModules;\n  return <Global className=\"app\" {...props} preset={preset} />;\n});\n\nconst MainLayout = createWithRemoteLoader({\n  modules: ['components-core:Layout']\n})(({ remoteModules, paths, navigateTo, ...props }) => {\n  const [Layout] = remoteModules;\n  return (\n    <GlobalPage {...props}>\n      <Layout\n        navigation={{\n          defaultTitle: 'leapin-saas',\n          showIndex: false,\n          list: paths,\n          navigateTo,\n          headerLogo: { src: window.PUBLIC_URL + '/logo.png' }\n        }}\n      >\n        <Outlet />\n      </Layout>\n    </GlobalPage>\n  );\n});\n\nexport default MainLayout;\n","import loadable from '@loadable/component';\nimport { Spin } from 'antd';\n\nconst loadableWithProps = func =>\n  loadable(func, {\n    fallback: <Spin style={{ position: 'absolute', left: '50%', transform: 'translateX(-50%)' }} />\n  });\n\nconst pages = {\n  Home: loadableWithProps(() => import('./Home')),\n  CreateAgent: loadableWithProps(() => import('./CreateAgent')),\n  Marketplace: loadableWithProps(() => import('./Marketplace')),\n  HrAssistant: loadableWithProps(() => import('./HrAssistant')),\n  ChatBot: loadableWithProps(() => import('./ChatBot')),\n  History: loadableWithProps(() => import('./History'))\n};\n\nexport default pages;\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { Provider } from './context';\nimport pages from './pages';\n\nconst { Home, CreateAgent, Marketplace, HrAssistant, ChatBot, History } = pages;\n\nconst App = ({ baseUrl }) => {\n  return (\n    <Provider value={{ baseUrl }}>\n      <Routes>\n        <Route index element={<Home />} />\n        <Route path=\"create\" element={<CreateAgent />} />\n        <Route path=\"marketplace\" element={<Marketplace />} />\n        <Route path=\"detail\" element={<HrAssistant />} />\n        <Route path=\"chat-bot-test\" element={<ChatBot />} />\n        <Route path=\"history\" element={<History />} />\n      </Routes>\n    </Provider>\n  );\n};\n\nexport default App;\n","// extracted by mini-css-extract-plugin\nexport default {\"chat-bot\":\"style_chat-bot__6-RYh__pIGCk\"};","import { createWithRemoteLoader } from '@kne/remote-loader';\nimport Fetch from '@kne/react-fetch';\nimport { Navigate, useSearchParams } from 'react-router-dom';\nimport ChatBot from '@components/ChatBot';\nimport style from './style.module.scss';\n\nconst ChatBotClient = createWithRemoteLoader({\n  modules: ['components-core:Global@usePreset']\n})(({ remoteModules, baseUrl, code, error }) => {\n  const [usePreset] = remoteModules;\n  const [searchParams] = useSearchParams();\n  const { apis } = usePreset();\n  return (\n    <Fetch\n      {...Object.assign({}, apis.agent.chatBotClient.getTokenByCode, {\n        data: {\n          code: code || searchParams.get('code')\n        }\n      })}\n      error={error || <Navigate to={`${baseUrl}/error`} />}\n      render={({ data }) => {\n        return <ChatBot className={style['chat-bot']} id={data.session?.id} token={data.token} apiName=\"chatBotClient\" />;\n      }}\n    />\n  );\n});\n\nexport default ChatBotClient;\n","import { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport pages from './pages';\nimport MainLayout, { GlobalPage } from './MainLayout';\nimport AiAgentApp from '@components/App';\nimport ChatBotClient from '@components/ChatBotClient';\nimport './index.scss';\n\nconst { Error, NotFound } = pages;\n\nconst App = ({ globalPreset }) => {\n  const navigate = useNavigate();\n  return (\n    <Routes>\n      <Route\n        element={\n          <MainLayout\n            preset={globalPreset}\n            themeToken={globalPreset.themeToken}\n            navigateTo={path => {\n              if (path === '/') {\n                window.location.href = path;\n                return;\n              }\n              navigate(path);\n            }}\n            paths={[\n              {\n                key: 'leapin-saas',\n                title: 'LeapIn Saas',\n                path: '/'\n              },\n              {\n                key: 'ai-agent',\n                title: 'AI Agent',\n                path: '/ai-agent'\n              }\n            ]}\n          />\n        }\n      >\n        <Route path=\"/ai-agent/*\" element={<AiAgentApp baseUrl=\"/ai-agent\" />} />\n        <Route path=\"/login\" element={'登录token失效'} />\n        <Route path=\"/ai-agent/error\" element={<Error />} />\n        <Route path=\"error\" element={<Error />} />\n        <Route path=\"/ai-agent/404\" element={<NotFound />} />\n        <Route path=\"404\" element={<NotFound />} />\n        <Route path=\"*\" element={<Navigate to=\"/ai-agent\" />} />\n      </Route>\n      <Route\n        path=\"/ai-agent/chat-bot\"\n        element={\n          <GlobalPage preset={globalPreset} themeToken={globalPreset.themeToken}>\n            <div className=\"client-bot\">\n              <ChatBotClient baseUrl=\"/ai-agent\" />\n            </div>\n          </GlobalPage>\n        }\n      />\n    </Routes>\n  );\n};\n\nexport default App;\n","import { BrowserRouter } from 'react-router-dom';\nimport { globalInit } from './preset';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst renderRoot = async App => {\n  const globalPreset = await globalInit();\n  root.render(\n    <BrowserRouter>\n      <App themeToken={globalPreset.themeToken} globalPreset={globalPreset} />\n    </BrowserRouter>\n  );\n};\n\nif (process.env.NODE_ENV === 'development') {\n  import('@kne/modules-dev/dist/create-entry.css');\n  import('@kne/modules-dev/dist/create-entry').then(module => {\n    renderRoot(module.default(({ globalPreset }) => <App globalPreset={globalPreset} />));\n  });\n} else {\n  renderRoot(App);\n}\n","import { createWithRemoteLoader, getPublicPath } from '@kne/remote-loader';\nimport { Flex, Input, App, Spin, Splitter, Button, Card, Typography } from 'antd';\nimport { useState, useEffect, useRef, useMemo } from 'react';\nimport Fetch from '@kne/react-fetch';\nimport classnames from 'classnames';\nimport last from 'lodash/last';\nimport first from 'lodash/first';\nimport MessageList from './MessageList';\nimport useRefCallback from '@kne/use-ref-callback';\nimport { AudioFilled } from '@ant-design/icons';\nimport defaultAvatar from '../../common/defaultAvatar.png';\nimport enter from './enter.png';\nimport style from './style.module.scss';\nimport get from 'lodash/get';\nimport CheckList from './CheckList';\nimport Countdown from './Countdown';\nimport MarkdownRender from '@kne/markdown-components-render';\nimport sse from '@root/common/sse';\nimport localStorage from '@kne/local-storage';\nimport QueueAnim from 'rc-queue-anim';\nimport Record from './Record';\n\nconst JobCard = createWithRemoteLoader({\n  modules: ['components-core:InfoPage']\n})(({ remoteModules, title, link, children }) => {\n  const [InfoPage] = remoteModules;\n  return (\n    <InfoPage className={style['job-card']}>\n      <InfoPage.Part title={title}>{children}</InfoPage.Part>\n      <InfoPage>\n        <Flex justify=\"flex-end\">\n          <Button shape=\"round\" target=\"_blank\" href={link} type=\"primary\">\n            Apply\n          </Button>\n        </Flex>\n      </InfoPage>\n    </InfoPage>\n  );\n});\n\nconst transformHTML = html => {\n  const dom = document.createElement('div');\n  dom.innerHTML = html;\n  //获取所有a链接和.yaml-components节点，其他删掉\n  const results = [];\n  const links = dom.querySelectorAll('a');\n  [].slice.call(links, 0).forEach(link => {\n    if (/\\.(mp4|webm|ogv)$/i.test(link.href)) {\n      const video = document.createElement('video');\n      video.setAttribute('src', link.href);\n      video.setAttribute('controls', '');\n      results.push(video);\n    }\n    if (/\\.(jpg|jpeg|png|gif|bmp|tiff|webp)$/i.test(link.href)) {\n      const img = document.createElement('img');\n      img.setAttribute('src', link.href);\n      results.push(img);\n    }\n  });\n\n  const medias = dom.querySelectorAll('img,video');\n\n  [].slice.call(medias, 0).forEach(media => {\n    results.push(media);\n  });\n\n  const components = dom.querySelectorAll('.yaml-components');\n  results.push(...[].slice.call(components, 0));\n  return results.map(element => element.outerHTML);\n};\n\nconst SideMessage = ({ messages }) => {\n  const ref = useRef(null);\n  const contentRef = useRef({ output: '', index: -1 });\n  const [visibleFirst, setVisibleFirst] = useState(false);\n  const content = useMemo(() => {\n    return get(last(messages), 'chatbot_content') || '';\n  }, [messages]);\n\n  const render = (content, index) => {\n    return (\n      <MarkdownRender\n        htmlTransform={transformHTML}\n        components={{\n          Card,\n          JobCard\n        }}\n        render={output => {\n          if (output && output.length > 0) {\n            contentRef.current = { output, index };\n          }\n          setVisibleFirst(!(contentRef.current && contentRef.current.output && contentRef.current.output.length > 0));\n          return (\n            <QueueAnim\n              duration={1000}\n              interval={500}\n              type={['top', 'bottom']}\n              onEnd={() => {\n                const video = ref.current.querySelectorAll('video');\n                [].slice.call(video, 0).forEach(video => {\n                  video.muted = true;\n                  video.play();\n                });\n              }}\n            >\n              {contentRef.current &&\n                contentRef.current.output &&\n                contentRef.current.output.map((node, index) => {\n                  return <div key={`${contentRef.current.index}-${index}`}>{node}</div>;\n                })}\n            </QueueAnim>\n          );\n        }}\n      >\n        {content}\n      </MarkdownRender>\n    );\n  };\n\n  return (\n    <div className={style['side-content']} ref={ref}>\n      {visibleFirst ? <div key=\"first\">{render(get(first(messages), 'chatbot_content') || '', 0)}</div> : <div key=\"content\">{render(content, messages.length - 1)}</div>}\n    </div>\n  );\n};\n\nconst ChartBotMessage = createWithRemoteLoader({\n  modules: ['components-core:LoadingButton', 'components-core:Global@usePreset', 'components-core:Common@SimpleBar', 'components-core:Image']\n})(({ remoteModules, messageList, agentId, agentAvatar, sessionId, sessionName, startTime, lastTime, apis, onComplete, className, isEnd, openSide, token }) => {\n  const [LoadingButton, usePreset, SimpleBar, Image] = remoteModules;\n  const [loading, setLoading] = useState(true);\n  const [evening, setEvening] = useState(false);\n  const [list, setList] = useState(messageList || []);\n  const { ajax } = usePreset();\n  const { message } = App.useApp();\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isComposing, setIsComposing] = useState(false);\n  const messageListRef = useRef(null);\n  const [sizes, setSizes] = useState(localStorage.getItem('LEAPIN_AI_AGENT_WINDOW_SIZES') || ['70%', '30%']);\n  const inputTimer = useRef(null);\n  const inputRef = useRef(null);\n  const endHandler = useRefCallback(async () => {\n    const { data: resData } = await ajax(\n      Object.assign({}, apis.saveSession, {\n        urlParams: { session_id: sessionId },\n        params: { token },\n        data: {\n          status: 2\n        }\n      })\n    );\n    if (resData.code !== 0) {\n      return;\n    }\n    message.success('Success');\n    onComplete && onComplete();\n  });\n  const [isRecord, setIsRecord] = useState(false);\n\n  useEffect(() => {\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n  }, [list, loading]);\n  const sendMessage = useRefCallback(async ({ type, value }) => {\n    setLoading(true);\n    setEvening(true);\n    const prevMessageId = last(list.filter(({ event }) => event !== 'error'))?.id;\n\n    const sseOptions = Object.assign({}, apis.sendSessionMessageStream, {\n      urlParams: { session_id: sessionId },\n      params: { token },\n      data:\n        type === 'condition'\n          ? {\n              type,\n              user_selection: [value],\n              chat_message_id: prevMessageId\n            }\n          : {\n              type,\n              user_content: value,\n              chat_message_id: prevMessageId\n            },\n      eventEmit: data => {\n        setList(list => {\n          const newList = list.slice(0);\n          const index = newList.findIndex(({ id }) => id === data.id);\n\n          if (index === -1) {\n            newList.push(data);\n          } else {\n            newList.splice(\n              index,\n              1,\n              Object.assign({}, newList[index], data, {\n                chatbot_content: (newList[index].chatbot_content || '') + (data.chatbot_content || '')\n              })\n            );\n          }\n          return newList;\n        });\n      }\n    });\n    ajax.parseUrlParams(sseOptions);\n    await sse(sseOptions);\n    setLoading(false);\n    setCurrentMessage('');\n    setEvening(false);\n    inputRef.current && inputRef.current.focus();\n  });\n\n  useEffect(() => {\n    if (list.length === 0) {\n      sendMessage({ value: '' });\n    } else {\n      setLoading(false);\n    }\n  }, [list, sendMessage]);\n\n  const botBody = (\n    <>\n      <div className={style['title']}>\n        <Flex className={style['title-inner']} justify=\"space-between\" align=\"center\">\n          <Flex gap={8} flex={1}>\n            <Flex flex={0}>\n              <Image.Avatar src={agentAvatar || defaultAvatar} size={54} />\n            </Flex>\n            <Flex flex={1} vertical justify=\"center\">\n              <div className={style['title-content']}>{sessionName || 'Conversations'}</div>\n              {!isEnd && lastTime && (\n                <div className={style['title-time']}>\n                  <Countdown time={lastTime} onComplete={endHandler} />\n                </div>\n              )}\n            </Flex>\n          </Flex>\n          <Flex>\n            {lastTime &&\n              (!isEnd ? (\n                <LoadingButton type=\"primary\" shape=\"round\" onClick={endHandler}>\n                  End\n                </LoadingButton>\n              ) : (\n                <div className={style['over-tips']}>Conversation End</div>\n              ))}\n          </Flex>\n        </Flex>\n      </div>\n      <Flex vertical gap={8} className={style['bot-body']}>\n        <SimpleBar\n          className={classnames(style['message-list-outer'], 'message-list-scroller', {\n            [style['is-end']]: isEnd\n          })}\n          scrollableNodeProps={{ ref: messageListRef }}\n        >\n          <MessageList\n            isEnd={isEnd}\n            agentAvatar={agentAvatar}\n            list={list}\n            startTime={startTime}\n            currentMessage={loading && currentMessage}\n            onResend={data => {\n              sendMessage({ type: data.type, value: data.user_content });\n            }}\n            onConditionChange={item => {\n              setCurrentMessage(item.label);\n              sendMessage({ type: 'condition', value: item });\n            }}\n          />\n        </SimpleBar>\n        {!isEnd && (\n          <div className={style['footer']}>\n            {get(last(list), 'type') === 'condition' ? (\n              <div className={style['message-input-checklist']}>\n                <CheckList\n                  loading={loading}\n                  options={last(list).options || []}\n                  onChange={item => {\n                    setCurrentMessage(item.label);\n                    sendMessage({ type: 'condition', value: item });\n                  }}\n                />\n              </div>\n            ) : (\n              <>\n                {isRecord ? (\n                  <Record\n                    agentId={agentId}\n                    onChange={msg => {\n                      setCurrentMessage(msg);\n                    }}\n                    onComplete={msg => {\n                      setIsRecord(false);\n                      if (msg) {\n                        return sendMessage({ type: 'text', value: msg });\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className={style['message-input-border']}>\n                    <Flex className={style['message-input-outer']} align=\"center\">\n                      <Input.TextArea\n                        ref={inputRef}\n                        onCompositionStart={() => {\n                          setIsComposing(true);\n                          inputTimer.current && clearTimeout(inputTimer.current);\n                        }}\n                        onCompositionEnd={() => {\n                          inputTimer.current = setTimeout(() => {\n                            setIsComposing(false);\n                          }, 0);\n                        }}\n                        disabled={loading || evening}\n                        className={style['message-input']}\n                        autoSize={{ minRows: 1, maxRows: 6 }}\n                        placeholder=\"Ask Elsa...\"\n                        value={currentMessage}\n                        onChange={e => {\n                          setCurrentMessage(e.target.value);\n                        }}\n                        onKeyUp={e => {\n                          if (e.key === 'Enter' && !isComposing) {\n                            const msg = currentMessage.trim();\n                            setCurrentMessage(msg);\n                            if (msg.length === 0) {\n                              message.warning('The content sent cannot be empty');\n                              return;\n                            }\n                            return sendMessage({ type: 'text', value: msg });\n                          }\n                        }}\n                      />\n                      <Button\n                        size=\"small\"\n                        icon={<AudioFilled />}\n                        shape=\"circle\"\n                        type=\"link\"\n                        onClick={() => {\n                          setIsRecord(true);\n                        }}\n                      />\n                      <LoadingButton\n                        className={style['message-sender']}\n                        type=\"primary\"\n                        loading={loading || evening}\n                        icon={<img src={enter} alt=\"enter\" />}\n                        onClick={async () => {\n                          const msg = currentMessage.trim();\n                          if (msg.length === 0) {\n                            message.warning('The content sent cannot be empty');\n                            return;\n                          }\n                          return sendMessage({ type: 'text', value: msg.trim() });\n                        }}\n                      />\n                    </Flex>\n                  </div>\n                )}\n              </>\n            )}\n            <Typography.Link className={style['term']} target=\"_blank\" href={`${getPublicPath('leapin-ai-agent')}/terms.html`}>\n              Privacy and terms\n            </Typography.Link>\n          </div>\n        )}\n      </Flex>\n    </>\n  );\n  return (\n    <Flex vertical className={classnames(className, style['chat'])}>\n      {openSide ? (\n        <Splitter\n          onResize={sizes => {\n            localStorage.setItem('LEAPIN_AI_AGENT_WINDOW_SIZES', sizes);\n            setSizes(sizes);\n          }}\n        >\n          <Splitter.Panel size={sizes[0]}>\n            {list.length > 0 ? (\n              <SimpleBar className={classnames(style['side-content-outer'], 'side-content-outer')}>\n                <SideMessage messages={list} evening={evening} />\n              </SimpleBar>\n            ) : (\n              <Flex align=\"center\" justify=\"center\" style={{ height: '100%' }}>\n                <Spin />\n              </Flex>\n            )}\n          </Splitter.Panel>\n          <Splitter.Panel size={sizes[1]}>{botBody}</Splitter.Panel>\n        </Splitter>\n      ) : (\n        botBody\n      )}\n    </Flex>\n  );\n});\n\nconst ChartBot = createWithRemoteLoader({\n  modules: ['components-core:Global@usePreset']\n})(({ remoteModules, className, apiName, id, baseUrl, token, onComplete }) => {\n  const [usePreset] = remoteModules;\n  const { apis } = usePreset();\n  const currentApis = apis.agent[apiName];\n  return (\n    <Fetch\n      {...Object.assign({}, currentApis.getSessionDetail, {\n        urlParams: { session_id: id },\n        params: { token }\n      })}\n      render={({ data, reload }) => {\n        return (\n          <ChartBotMessage\n            token={token}\n            className={className}\n            apis={currentApis}\n            sessionId={data.id}\n            startTime={data.start_time}\n            sessionName={data.session_name}\n            baseUrl={baseUrl}\n            onComplete={() => {\n              reload();\n            }}\n            openSide={data.agent.is_dynamic_output && document.documentElement.clientWidth >= 600}\n            lastTime={data.countdown_time}\n            isEnd={data.status === 2}\n            messageList={data.messages}\n            agentId={data.agent.id}\n            agentAvatar={get(data, 'agent_application.agent.avatar')}\n          />\n        );\n      }}\n    />\n  );\n});\n\nexport default ChartBot;\n\nexport { MessageList };\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["context","createContext","Provider","Consumer","useContext","useReactContext","arrayEach","require","baseCreate","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isObject","isTypedArray","module","exports","object","iteratee","accumulator","isArr","isArrLike","Ctor","constructor","value","index","options","prefix","Object","assign","addAgent","url","method","saveAgent","duplicateAgent","removeAgent","getAgentDetail","getAgentList","setAgentConfig","uploadKnowledge","removeKnowledge","getKnowledgeList","saveKnowledge","getSessionList","getApplicationList","getApplicationDetail","chatBot","addSession","getSessionDetail","sendSessionMessage","sendSessionMessageStream","getSideInfo","saveSession","job","getJobList","deliverJob","resend","rejected","chatBotClient","getTokenByCode","createChatBot","getSpeechToken","window","PUBLIC_URL","runtimePublicUrl","process","defaultHeaders","headers","Authorization","cookie","loadableWithProps","func","loadable","fallback","_jsx","Spin","style","position","left","transform","Error","NotFound","GlobalPage","createWithRemoteLoader","modules","_ref","remoteModules","preset","props","Global","className","_ref2","paths","navigateTo","Layout","children","navigation","defaultTitle","showIndex","list","headerLogo","src","Outlet","Home","CreateAgent","Marketplace","HrAssistant","ChatBot","History","pages","baseUrl","_jsxs","Routes","Route","element","path","code","error","usePreset","searchParams","useSearchParams","apis","Fetch","agent","data","get","Navigate","to","render","_data$session","id","session","token","apiName","globalPreset","navigate","useNavigate","MainLayout","themeToken","location","href","key","title","AiAgentApp","ChatBotClient","root","ReactDOM","document","getElementById","renderRoot","async","ajax","instance","axios","validateStatus","interceptors","request","use","config","toUpperCase","response","status","hasOwnProperty","showError","message","_response$data","msg","_response$data2","_response$data2$error","error_msg","detail","_response$data3","Promise","reject","parseUrlParams","params","urlParams","keys","length","replace","match","name","loader","resolve","omit","then","catch","err","postForm","queryString","URLSearchParams","toString","fetchPreset","loading","delay","padding","empty","Empty","transformResponse","results","registry","tpl","componentsCoreRemote","remote","defaultVersion","remoteLoaderPreset","remotes","default","enums","atsStage","description","getAgentApis","file","contentWindowUrl","upload","resData","media_params","ossConfig","targetFileName","fileReader","FileReader","readAsBinaryString","onload","e","md5Hash","md5","target","result","onerror","split","pop","uploadRes","host","ensureSlash","dir","policy","OSSAccessKeyId","signature","Signature","success_action_status","xmlDoc","DOMParser","parseFromString","getElementsByTagName","textContent","filename","locale","colorPrimary","formInfo","type","globalInit","BrowserRouter","App","JobCard","link","InfoPage","Part","Flex","justify","Button","shape","transformHTML","html","dom","createElement","innerHTML","links","querySelectorAll","slice","call","forEach","test","video","setAttribute","push","img","medias","media","components","map","outerHTML","SideMessage","messages","ref","useRef","contentRef","output","visibleFirst","setVisibleFirst","useState","content","useMemo","last","MarkdownRender","htmlTransform","Card","current","QueueAnim","duration","interval","onEnd","muted","play","node","first","ChartBotMessage","_ref3","messageList","agentId","agentAvatar","sessionId","sessionName","startTime","lastTime","onComplete","isEnd","openSide","LoadingButton","SimpleBar","Image","setLoading","evening","setEvening","setList","useApp","currentMessage","setCurrentMessage","isComposing","setIsComposing","messageListRef","sizes","setSizes","localStorage","inputTimer","inputRef","endHandler","useRefCallback","session_id","success","isRecord","setIsRecord","useEffect","scrollTop","scrollHeight","sendMessage","_last","_ref4","prevMessageId","filter","_ref5","event","sseOptions","user_selection","chat_message_id","user_content","eventEmit","newList","findIndex","_ref6","splice","chatbot_content","sse","focus","botBody","_Fragment","align","gap","flex","Avatar","defaultAvatar","size","vertical","Countdown","time","onClick","classnames","scrollableNodeProps","MessageList","onResend","onConditionChange","item","label","CheckList","onChange","Record","Input","TextArea","onCompositionStart","clearTimeout","onCompositionEnd","setTimeout","disabled","autoSize","minRows","maxRows","placeholder","onKeyUp","trim","warning","icon","AudioFilled","enter","alt","Typography","Link","getPublicPath","Splitter","onResize","Panel","height","_ref7","currentApis","_ref8","reload","start_time","session_name","is_dynamic_output","documentElement","clientWidth","countdown_time","m","createRoot","hydrateRoot"],"sourceRoot":""}