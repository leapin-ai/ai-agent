{"version":3,"file":"static/js/2379.197d0e70.chunk.js","mappings":"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","sources":["webpack://@kne-components/leapin-ai-agent/./src/components/PageHeader/style.module.scss?df1b","components/PageHeader/index.js","webpack://@kne-components/leapin-ai-agent/./src/components/ChatHistory/style.module.scss?65f2","webpack://@kne-components/leapin-ai-agent/./src/components/LeftMenu/style.module.scss?35e3","components/LeftMenu/index.js","components/ChatHistory/index.js","components/App/pages/History/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page-header\":\"style_page-header__dlhVC__pIGCk\",\"title\":\"style_title__j7bir__pIGCk\"};","import style from './style.module.scss';\nimport { Flex } from 'antd';\nimport classnames from 'classnames';\n\nconst PageHeader = ({ className, title, description }) => {\n  return (\n    <Flex vertical gap={4} className={classnames(className, style['page-header'])}>\n      <div className={style['title']}>\n        <i />\n        {title}\n      </div>\n      {description && <div className={style['description']}>{description}</div>}\n    </Flex>\n  );\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"history\":\"style_history__SSRYv__pIGCk\",\"title\":\"style_title__wQ4KP__pIGCk\",\"search-input\":\"style_search-input__ZmilC__pIGCk\",\"tag\":\"style_tag__Y1EjT__pIGCk\"};","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"style_menu__mjcZV__pIGCk\",\"is-close\":\"style_is-close__8f5gV__pIGCk\"};","import { Menu, Avatar } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport classnames from 'classnames';\nimport ai from './ai.png';\nimport aiActive from './aiActive.png';\nimport chat from './chat.png';\nimport chatActive from './chatActive.png';\nimport style from './style.module.scss';\n\nconst LeftMenu = ({ open, baseUrl }) => {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const activeKey = pathname.indexOf(`${baseUrl}/history`) === 0 ? 'history' : 'agent';\n\n  return (\n    <Menu\n      className={classnames(style['menu'], {\n        [style['is-close']]: !open\n      })}\n      selectedKeys={[activeKey]}\n      items={[\n        {\n          icon: <Avatar src={activeKey === 'history' ? chatActive : chat} />,\n          label: 'Chat History',\n          key: 'history',\n          onClick: () => {\n            navigate(`${baseUrl}/history`);\n          }\n        },\n        {\n          icon: <Avatar src={activeKey === 'agent' ? aiActive : ai} />,\n          label: 'AI Agent',\n          key: 'agent',\n          onClick: () => {\n            navigate(`${baseUrl}`);\n          }\n        }\n      ]}\n    />\n  );\n};\n\nexport default LeftMenu;\n","import { createWithRemoteLoader } from '@kne/remote-loader';\nimport { useState } from 'react';\nimport { Flex, Pagination, Button, Space } from 'antd';\nimport PageHeader from '@components/PageHeader';\nimport Fetch from '@kne/react-fetch';\nimport get from 'lodash/get';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { MessageList } from '@components/ChatBot';\nimport style from './style.module.scss';\n\nconst ChartHistory = createWithRemoteLoader({\n  modules: ['components-core:InfoPage@TableView', 'components-core:Global@usePreset', 'components-core:Common@SearchInput', 'components-core:Modal@useModal', 'components-core:StateTag']\n})(({ remoteModules, baseUrl }) => {\n  const [TableView, usePreset, SearchInput, useModal, StateTag] = remoteModules;\n  const { apis } = usePreset();\n  const [keyword, setKeyword] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const modal = useModal();\n  const page = searchParams.get('page') || 1,\n    pageSize = 10;\n  return (\n    <Flex className={style['history']} vertical gap={24}>\n      <PageHeader title=\"The Chat History\" description=\"The chat history record the running status of the application, including user inputs and AI replies.\" />\n      <Flex className={style['filter']} justify=\"space-between\">\n        <div></div>\n        <div>\n          <SearchInput className={style['search-input']} value={keyword} placeholder=\"search\" onSearch={setKeyword} />\n        </div>\n      </Flex>\n      <Fetch\n        {...Object.assign({}, apis.agent.getSessionList, {\n          params: { page, page_size: pageSize, keyword }\n        })}\n        render={({ data }) => {\n          return (\n            <Flex vertical gap={8}>\n              <TableView\n                dataSource={data.results}\n                columns={[\n                  {\n                    name: 'name',\n                    title: 'Name',\n                    getValueOf: item => {\n                      const info = get(item, 'agent_application.application') || get(item, 'agent_application.employee');\n\n                      return info?.name;\n                    }\n                  },\n                  {\n                    name: 'phone',\n                    title: 'Phone',\n                    getValueOf: item => {\n                      const info = get(item, 'agent_application.application') || get(item, 'agent_application.employee');\n\n                      return info?.mobile;\n                    }\n                  },\n                  {\n                    name: 'email',\n                    title: 'Email',\n                    getValueOf: item => {\n                      const info = get(item, 'agent_application.application') || get(item, 'agent_application.employee');\n\n                      return info?.email;\n                    }\n                  },\n                  {\n                    name: 'role',\n                    title: 'Role',\n                    getValueOf: item => {\n                      return (\n                        <Space wrap>\n                          {(get(item, 'agent_application.agent.role') || []).map(role => (\n                            <div key={role} className={style['tag']}>\n                              {role}\n                            </div>\n                          ))}\n                        </Space>\n                      );\n                    }\n                  },\n                  {\n                    name: 'agentName',\n                    title: 'Agent Name',\n                    getValueOf: item => {\n                      return <Link to={`${baseUrl}/detail?id=${get(item, 'agent_application.agent.id')}`}>{get(item, 'agent_application.agent.name')}</Link>;\n                    }\n                  },\n                  {\n                    name: 'status',\n                    title: 'Status',\n                    render: status => {\n                      if (status === 0) {\n                        return <StateTag text=\"Not started\" />;\n                      }\n                      if (status === 1) {\n                        return <StateTag type=\"progress\" text=\"In progress\" />;\n                      }\n\n                      if (status === 2) {\n                        return <StateTag type=\"success\" text=\"Completed\" />;\n                      }\n\n                      return <StateTag text=\"Unknown\" />;\n                    }\n                  },\n                  {\n                    name: 'messages',\n                    title: 'Chat History',\n                    getValueOf: item => {\n                      return (\n                        <Button\n                          className=\"btn-no-padding\"\n                          type=\"link\"\n                          onClick={() => {\n                            modal({\n                              title: 'Chat History',\n                              footer: null,\n                              children: <MessageList agentAvatar={get(item, 'agent_application.agent.avatar')} list={item.messages} startTime={item.start_time} />\n                            });\n                          }}\n                        >\n                          Check\n                        </Button>\n                      );\n                    }\n                  },\n                  {\n                    name: 'start_time',\n                    title: 'Start Time',\n                    format: 'date-DD.MM.YYYY()HH:mm'\n                  },\n                  {\n                    name: 'end_time',\n                    title: 'End Time',\n                    format: 'date-DD.MM.YYYY()HH:mm'\n                  }\n                ]}\n              />\n              <Flex justify=\"flex-end\">\n                <Pagination\n                  showSizeChanger={false}\n                  hideOnSinglePage\n                  total={data.count}\n                  current={page}\n                  pageSize={pageSize}\n                  onChange={page => {\n                    const newSearchParams = new URLSearchParams(searchParams);\n                    newSearchParams.set('page', page);\n                    setSearchParams(newSearchParams);\n                  }}\n                />\n              </Flex>\n            </Flex>\n          );\n        }}\n      />\n    </Flex>\n  );\n});\n\nexport default ChartHistory;\n","import { createWithRemoteLoader } from '@kne/remote-loader';\nimport { useContext } from '../../context';\nimport LeftMenu from '@components/LeftMenu';\nimport History from '@components/ChatHistory';\n\nconst HistoryPage = createWithRemoteLoader({\n  modules: ['Layout@Page']\n})(({ remoteModules }) => {\n  const { baseUrl } = useContext();\n  const [Page] = remoteModules;\n  return (\n    <Page menuWidth=\"200px\" menuCloseWidth=\"80px\" backgroundColor=\"transparent\" menu={({ open }) => <LeftMenu baseUrl={baseUrl} open={open} />}>\n      <History baseUrl={baseUrl} />\n    </Page>\n  );\n});\n\nexport default HistoryPage;\n"],"names":["_ref","className","title","description","_jsxs","Flex","vertical","gap","classnames","style","children","_jsx","open","baseUrl","pathname","useLocation","navigate","useNavigate","activeKey","indexOf","Menu","selectedKeys","items","icon","Avatar","src","label","key","onClick","createWithRemoteLoader","modules","remoteModules","TableView","usePreset","SearchInput","useModal","StateTag","apis","keyword","setKeyword","useState","searchParams","setSearchParams","useSearchParams","modal","page","get","PageHeader","justify","value","placeholder","onSearch","Fetch","Object","assign","agent","getSessionList","params","page_size","render","_ref2","data","dataSource","results","columns","name","getValueOf","item","info","mobile","email","Space","wrap","map","role","Link","to","status","text","type","Button","footer","MessageList","agentAvatar","list","messages","startTime","start_time","format","Pagination","showSizeChanger","hideOnSinglePage","total","count","current","pageSize","onChange","newSearchParams","URLSearchParams","set","useContext","Page","menuWidth","menuCloseWidth","backgroundColor","menu","LeftMenu","History"],"sourceRoot":""}