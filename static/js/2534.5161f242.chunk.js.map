{"version":3,"file":"static/js/2534.5161f242.chunk.js","mappings":"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","sources":["components/ChatBot/CheckList.js","components/ChatBot/Countdown.js","webpack://@kne-components/leapin-ai-agent/./src/components/ChatBot/style.module.scss?b559","components/ChatBot/Record.js","components/ChatBot/loading.svg","components/ChatBot/getDefaultAvatar.js","components/ChatBot/MessageList.js","common/sse.js"],"sourcesContent":["import { Col, Row, Space } from 'antd';\nimport classnames from 'classnames';\nimport style from './style.module.scss';\n\nconst CheckList = ({ loading, value, options, onChange }) => {\n  return (\n    <Row gutter={8}>\n      <Col>Please Select:</Col>\n      <Col>\n        <Space>\n          {options.map(item => {\n            return (\n              <div\n                className={classnames(style['message-condition-item'], {\n                  [style['is-active']]: value === item.value,\n                  [style['loading']]: loading\n                })}\n                key={item.value}\n                onClick={() => {\n                  onChange && onChange(item);\n                }}\n              >\n                {item.label}\n              </div>\n            );\n          })}\n        </Space>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CheckList;\n","import { useState, useEffect } from 'react';\n\nconst Countdown = ({ time, onComplete }) => {\n  const [current, setCurrent] = useState(Number.isInteger(time) ? time : 60);\n  const minute = Math.max(Math.floor(current / 60), 0),\n    second = Math.max(current % 60, 0);\n\n  useEffect(() => {\n    const nextTick = () => {\n      setCurrent(current => {\n        if (current <= 0) {\n          clearInterval(timer);\n          onComplete && onComplete();\n          return current;\n        }\n        return current - 1;\n      });\n    };\n    const timer = setInterval(nextTick, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return `${String(minute).padStart(2, '0')}:${String(second).padStart(2, '0')}`;\n};\n\nexport default Countdown;\n","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"style_chat__nTSCs__pIGCk\",\"title\":\"style_title__LsVuq__pIGCk\",\"title-inner\":\"style_title-inner__lhgjI__pIGCk\",\"message-list\":\"style_message-list__7CjMU__pIGCk\",\"message-time\":\"style_message-time__iPxsR__pIGCk\",\"message-avatar\":\"style_message-avatar__BGw82__pIGCk\",\"message-content\":\"style_message-content__+5fdI__pIGCk\",\"message\":\"style_message__kTo9C__pIGCk\",\"is-user\":\"style_is-user__JfI--__pIGCk\",\"message-black\":\"style_message-black__KhzLX__pIGCk\",\"footer\":\"style_footer__BbIzQ__pIGCk\",\"message-input-border\":\"style_message-input-border__sOM2H__pIGCk\",\"message-input-outer\":\"style_message-input-outer__D+X9D__pIGCk\",\"message-input\":\"style_message-input__AFDPl__pIGCk\",\"message-sender\":\"style_message-sender__Rru14__pIGCk\",\"message-input-checklist\":\"style_message-input-checklist__DIFZC__pIGCk\",\"message-list-outer\":\"style_message-list-outer__mV6kD__pIGCk\",\"is-end\":\"style_is-end__opaIC__pIGCk\",\"message-condition-item\":\"style_message-condition-item__p4-Vx__pIGCk\",\"loading\":\"style_loading__EP6dI__pIGCk\",\"title-content\":\"style_title-content__R6GFG__pIGCk\",\"title-time\":\"style_title-time__ggQwL__pIGCk\",\"over-tips\":\"style_over-tips__5hUEX__pIGCk\",\"side-content\":\"style_side-content__YXrpx__pIGCk\",\"side-content-outer\":\"style_side-content-outer__b4LHc__pIGCk\",\"job-card\":\"style_job-card__cG5DY__pIGCk\",\"term\":\"style_term__GRGus__pIGCk\"};","import { createWithRemoteLoader } from '@kne/remote-loader';\nimport { speechTextRealTime } from '@kne/speech-text';\nimport { useEffect, useRef, useState } from 'react';\nimport { App, Flex, Button } from 'antd';\nimport localStorage from '@kne/local-storage';\n\nconst Record = createWithRemoteLoader({\n  modules: ['components-core:Global@usePreset']\n})(({ remoteModules, agentId, onChange, onComplete }) => {\n  const [usePreset] = remoteModules;\n  const { apis, ajax } = usePreset();\n  const [currentMessage, setMessage] = useState('');\n  const [recording, setRecording] = useState(false);\n  const { message } = App.useApp();\n  const recordRef = useRef(null);\n  useEffect(() => {\n    recordRef.current = speechTextRealTime({\n      getToken: async () => {\n        const token = await localStorage.cache('LEAPIN_AGENT_SPEECH_TOKEN', async () => {\n          const { data: resData } = await ajax(\n            Object.assign({}, apis.agent.chatBotClient.getSpeechToken, {\n              urlParams: { agent_id: agentId }\n            })\n          );\n          if (resData.code !== 0) {\n            return null;\n          }\n          const { app_key, expire_time, token } = resData.data;\n          return { appKey: app_key, token, expire: expire_time * 1000 };\n        });\n        if (!token) {\n          onComplete();\n          return;\n        }\n        return token;\n      },\n      onChange: ({ message }) => {\n        onChange(message);\n        setMessage(message);\n      },\n      onError: msg => {\n        message.error(msg);\n      }\n    });\n    recordRef.current.then(({ start }) => {\n      start();\n      setRecording(true);\n    });\n  }, []);\n  return (\n    <Flex vertical>\n      <Flex justify=\"flex-end\" gap={10}>\n        {currentMessage && (\n          <Button\n            shape=\"round\"\n            type=\"primary\"\n            size=\"small\"\n            onClick={() => {\n              onComplete(currentMessage);\n              setMessage('');\n              recordRef.current.then(({ stop }) => {\n                stop();\n                setRecording(false);\n              });\n            }}\n          >\n            Send\n          </Button>\n        )}\n        <Button\n          shape=\"round\"\n          type=\"text\"\n          size=\"small\"\n          onClick={() => {\n            onComplete();\n            setMessage('');\n            recordRef.current.then(({ stop }) => {\n              stop();\n              setRecording(false);\n            });\n          }}\n        >\n          Cancel\n        </Button>\n      </Flex>\n      {currentMessage || (recording ? 'Please speak to me...' : 'Please wait...')}\n    </Flex>\n  );\n});\n\nexport default Record;\n","var _circle, _circle2, _circle3;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLoading(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4,\n    cy: 12,\n    r: 3,\n    fill: \"#2257bf\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    id: \"spinner_jObz\",\n    begin: \"0;spinner_vwSQ.end-0.25s\",\n    attributeName: \"r\",\n    dur: \"0.75s\",\n    values: \"3;.2;3\"\n  }))), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 3,\n    fill: \"#2257bf\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    begin: \"spinner_jObz.end-0.6s\",\n    attributeName: \"r\",\n    dur: \"0.75s\",\n    values: \"3;.2;3\"\n  }))), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 20,\n    cy: 12,\n    r: 3,\n    fill: \"#2257bf\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    id: \"spinner_vwSQ\",\n    begin: \"spinner_jObz.end-0.45s\",\n    attributeName: \"r\",\n    dur: \"0.75s\",\n    values: \"3;.2;3\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoading);\nexport default __webpack_public_path__ + \"static/media/loading.7b0a76b0ad308171b658f411a9143a59.svg\";\nexport { ForwardRef as ReactComponent };","import { getPublicPath } from '@kne/remote-loader';\n\nconst key = 'default-avatar';\nconst getDefaultAvatar = () => {\n  let value = window.localStorage.getItem(key);\n  if (!value) {\n    value = Math.floor(Math.random() * 20) + 1;\n    window.localStorage.setItem(key, value);\n  }\n  return `${getPublicPath('leapin-ai-agent')}/defaultAvatar/${value}.svg`;\n};\n\nexport default getDefaultAvatar;\n","import style from './style.module.scss';\nimport { Fragment } from 'react';\nimport { Flex, Button } from 'antd';\nimport dayjs from 'dayjs';\nimport classnames from 'classnames';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport defaultAvatar from '../../common/defaultAvatar.png';\nimport { createWithRemoteLoader } from '@kne/remote-loader';\nimport CheckList from './CheckList';\nimport last from 'lodash/last';\nimport get from 'lodash/get';\nimport MarkdownRender from '@kne/markdown-components-render';\nimport { ReactComponent as LoadingIcon } from './loading.svg';\nimport getDefaultAvatar from './getDefaultAvatar';\n\nconst MarkdownView = ({ children }) => {\n  return (\n    <MarkdownRender\n      htmlTransform={html => {\n        const dom = document.createElement('div');\n        dom.innerHTML = html;\n        const components = dom.querySelectorAll('img,video,.yaml-components');\n        [].slice.call(components, 0).forEach(component => {\n          component.parentNode.removeChild(component);\n        });\n        return dom.innerHTML;\n      }}\n    >\n      {children}\n    </MarkdownRender>\n  );\n};\n\nconst MessageList = createWithRemoteLoader({\n  modules: ['components-cre:Image', 'components-cre:LoadingButton']\n})(({ remoteModules, list, startTime, currentMessage, agentAvatar, onConditionChange, onResend, isEnd, children = null }) => {\n  const [Image, LoadingButton] = remoteModules;\n  return (\n    <Flex className={classnames(style['message-list'], 'message-list')} vertical gap={20}>\n      <Flex justify=\"center\" className={style['message-time']}>\n        {dayjs(startTime).format('YYYY-MM-DD HH:mm:ss')}\n      </Flex>\n      {list.map((item, index) => {\n        return (\n          <Fragment key={item.id}>\n            {!(index === 0 && (item.user_content || '').trim() === '') && (\n              <Flex className={classnames(style['message'], style['is-user'])} gap={12}>\n                <Image.Avatar className={style['message-avatar']} src={getDefaultAvatar()} size={28} />\n                <div\n                  className={style['message-content']}\n                  dangerouslySetInnerHTML={{\n                    __html: item.type === 'condition' ? get(item, 'current_selection[0].label') : item.user_content || ''\n                  }}\n                />\n                <div className={style['message-black']} />\n              </Flex>\n            )}\n            <div>\n              <Flex className={style['message']} gap={12}>\n                <Image.Avatar className={style['message-avatar']} src={agentAvatar || defaultAvatar} size={28} />\n                {item.type === 'condition' && item === last(list) ? (\n                  <Flex vertical gap={8} className={style['message-content']}>\n                    <MarkdownView>{item.chatbot_content || item.content || ''}</MarkdownView>\n                    {!isEnd && (\n                      <div>\n                        <CheckList loading={currentMessage} options={item.options} onChange={onConditionChange} />\n                      </div>\n                    )}\n                  </Flex>\n                ) : (\n                  <div className={style['message-content']}>\n                    <MarkdownView>{item.chatbot_content || item.content || ''}</MarkdownView>\n                  </div>\n                )}\n                <div className={style['message-black']} />\n              </Flex>\n              {item === last(list) && item.event === 'error' && (\n                <Flex gap={12}>\n                  <div className={style['message-black']} />\n                  <LoadingButton\n                    size=\"small\"\n                    type=\"link\"\n                    icon={<ReloadOutlined />}\n                    onClick={() => {\n                      return onResend && onResend(item);\n                    }}\n                  >\n                    Retry\n                  </LoadingButton>\n                </Flex>\n              )}\n            </div>\n          </Fragment>\n        );\n      })}\n      {currentMessage && (\n        <>\n          <Flex className={classnames(style['message'], style['is-user'])} gap={12}>\n            <Image.Avatar className={style['message-avatar']} src={getDefaultAvatar()} size={28} />\n            <div\n              className={style['message-content']}\n              dangerouslySetInnerHTML={{\n                __html: currentMessage\n              }}\n            />\n            <div className={style['message-black']} />\n          </Flex>\n          <Flex className={style['message']} gap={12}>\n            <Image.Avatar className={style['message-avatar']} src={agentAvatar || defaultAvatar} size={28} />\n            <div className={style['message-content']}>\n              <LoadingIcon />\n            </div>\n            <div className={style['message-black']} />\n          </Flex>\n        </>\n      )}\n      {children}\n    </Flex>\n  );\n});\n\nexport default MessageList;\n","import qs from 'qs';\nimport transform from 'lodash/transform';\nimport cookie from 'js-cookie';\n\nconst sse = config => {\n  const { url, params, urlParams, data, method, eventEmit, ...options } = config;\n  const queryString = qs.stringify(\n    transform(\n      Object.assign({}, params, data, {\n        token: params.token || cookie.get('token')\n      }),\n      (result, value, key) => {\n        if (value !== void 0) {\n          result[key] = value;\n        }\n      },\n      {}\n    )\n  );\n\n  return new Promise(resolve => {\n    const eventSource = new EventSource(`${url}${queryString ? '?' + queryString : ''}`);\n    const result = [];\n    eventSource.onmessage = event => {\n      // 处理服务器推送的消息\n      const data = JSON.parse(event.data);\n      result.push(data);\n      eventEmit && eventEmit(data, result);\n      if (['error', 'message_end'].indexOf(data.event) > -1) {\n        eventSource.close();\n        resolve(result);\n      }\n    };\n    eventSource.onerror = error => {\n      eventSource.close();\n      resolve(result);\n    };\n  });\n};\n\nexport default sse;\n"],"names":["_ref","loading","value","options","onChange","_jsxs","Row","gutter","children","_jsx","Col","Space","map","item","className","classnames","style","onClick","label","time","onComplete","current","setCurrent","useState","Number","isInteger","minute","Math","max","floor","second","useEffect","timer","setInterval","nextTick","clearInterval","String","padStart","createWithRemoteLoader","modules","remoteModules","agentId","usePreset","apis","ajax","currentMessage","setMessage","recording","setRecording","message","App","useApp","recordRef","useRef","speechTextRealTime","getToken","async","token","localStorage","data","resData","Object","assign","agent","chatBotClient","getSpeechToken","urlParams","agent_id","code","app_key","expire_time","appKey","expire","_ref2","onError","msg","error","then","_ref3","start","Flex","vertical","justify","gap","Button","shape","type","size","_ref4","stop","_ref5","_circle","_circle2","_circle3","_extends","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgLoading","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","id","cx","cy","fill","begin","attributeName","dur","values","ForwardRef","key","getDefaultAvatar","window","getItem","random","setItem","getPublicPath","MarkdownView","MarkdownRender","htmlTransform","html","dom","document","createElement","innerHTML","components","querySelectorAll","slice","forEach","component","parentNode","removeChild","list","startTime","agentAvatar","onConditionChange","onResend","isEnd","Image","LoadingButton","dayjs","format","index","Fragment","user_content","trim","Avatar","src","dangerouslySetInnerHTML","__html","get","defaultAvatar","last","chatbot_content","content","CheckList","event","icon","ReloadOutlined","_Fragment","LoadingIcon","config","url","params","method","eventEmit","queryString","qs","transform","cookie","result","Promise","resolve","eventSource","EventSource","onmessage","JSON","parse","push","indexOf","close","onerror"],"sourceRoot":""}