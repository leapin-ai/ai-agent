{"version":3,"file":"static/js/3502.0c989baa.chunk.js","mappings":"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","sources":["webpack://@kne-components/leapin-ai-agent/./src/components/ChatBot/style.module.scss?b559","components/ChatBot/CheckList.js","components/ChatBot/loading.svg","components/ChatBot/MessageList.js","components/ChatBot/Countdown.js","components/ChatBot/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"style_chat__nTSCs__pIGCk\",\"title\":\"style_title__LsVuq__pIGCk\",\"title-inner\":\"style_title-inner__lhgjI__pIGCk\",\"message-list\":\"style_message-list__7CjMU__pIGCk\",\"message-time\":\"style_message-time__iPxsR__pIGCk\",\"message-avatar\":\"style_message-avatar__BGw82__pIGCk\",\"message-content\":\"style_message-content__+5fdI__pIGCk\",\"message\":\"style_message__kTo9C__pIGCk\",\"is-user\":\"style_is-user__JfI--__pIGCk\",\"message-black\":\"style_message-black__KhzLX__pIGCk\",\"footer\":\"style_footer__BbIzQ__pIGCk\",\"message-input-border\":\"style_message-input-border__sOM2H__pIGCk\",\"message-input-outer\":\"style_message-input-outer__D+X9D__pIGCk\",\"message-input\":\"style_message-input__AFDPl__pIGCk\",\"message-sender\":\"style_message-sender__Rru14__pIGCk\",\"message-input-checklist\":\"style_message-input-checklist__DIFZC__pIGCk\",\"message-list-outer\":\"style_message-list-outer__mV6kD__pIGCk\",\"is-end\":\"style_is-end__opaIC__pIGCk\",\"message-condition-item\":\"style_message-condition-item__p4-Vx__pIGCk\",\"loading\":\"style_loading__EP6dI__pIGCk\",\"title-time\":\"style_title-time__ggQwL__pIGCk\",\"over-tips\":\"style_over-tips__5hUEX__pIGCk\"};","import { Col, Row, Space } from 'antd';\nimport classnames from 'classnames';\nimport style from './style.module.scss';\n\nconst CheckList = ({ loading, value, options, onChange }) => {\n  return (\n    <Row gutter={8}>\n      <Col>Please Select:</Col>\n      <Col>\n        <Space>\n          {options.map(item => {\n            return (\n              <div\n                className={classnames(style['message-condition-item'], {\n                  [style['is-active']]: value === item.value,\n                  [style['loading']]: loading\n                })}\n                key={item.value}\n                onClick={() => {\n                  onChange && onChange(item);\n                }}\n              >\n                {item.label}\n              </div>\n            );\n          })}\n        </Space>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CheckList;\n","var _circle, _circle2, _circle3;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgLoading(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 4,\n    cy: 12,\n    r: 3,\n    fill: \"#2257bf\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    id: \"spinner_jObz\",\n    begin: \"0;spinner_vwSQ.end-0.25s\",\n    attributeName: \"r\",\n    dur: \"0.75s\",\n    values: \"3;.2;3\"\n  }))), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 3,\n    fill: \"#2257bf\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    begin: \"spinner_jObz.end-0.6s\",\n    attributeName: \"r\",\n    dur: \"0.75s\",\n    values: \"3;.2;3\"\n  }))), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 20,\n    cy: 12,\n    r: 3,\n    fill: \"#2257bf\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    id: \"spinner_vwSQ\",\n    begin: \"spinner_jObz.end-0.45s\",\n    attributeName: \"r\",\n    dur: \"0.75s\",\n    values: \"3;.2;3\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoading);\nexport default __webpack_public_path__ + \"static/media/loading.7b0a76b0ad308171b658f411a9143a59.svg\";\nexport { ForwardRef as ReactComponent };","import style from './style.module.scss';\nimport { Fragment } from 'react';\nimport { Flex } from 'antd';\nimport dayjs from 'dayjs';\nimport classnames from 'classnames';\nimport defaultAvatar from '../../common/defaultAvatar.png';\nimport { createWithRemoteLoader } from '@kne/remote-loader';\nimport markdown from 'markdown-it/index.mjs';\nimport CheckList from './CheckList';\nimport last from 'lodash/last';\nimport get from 'lodash/get';\nimport { ReactComponent as LoadingIcon } from './loading.svg';\n\nconst md = markdown();\n\nconst MessageList = createWithRemoteLoader({\n  modules: ['components-cre:Image']\n})(({ remoteModules, list, startTime, currentMessage, agentAvatar, onConditionChange, children = null }) => {\n  const [Image] = remoteModules;\n  return (\n    <Flex className={classnames(style['message-list'], 'message-list')} vertical gap={20}>\n      <Flex justify=\"center\" className={style['message-time']}>\n        {dayjs(startTime).format('YYYY-MM-DD HH:mm:ss')}\n      </Flex>\n      {list.map((item, index) => {\n        return (\n          <Fragment key={item.id}>\n            {!(index === 0 && (item.user_content || '').trim() === '') && (\n              <Flex className={classnames(style['message'], style['is-user'])} gap={12}>\n                <Image.Avatar className={style['message-avatar']} gender=\"M\" size={28} />\n                <div\n                  className={style['message-content']}\n                  dangerouslySetInnerHTML={{\n                    __html: item.type === 'condition' ? get(item, 'current_selection[0].label') : md.render(item.user_content || '')\n                  }}\n                />\n                <div className={style['message-black']} />\n              </Flex>\n            )}\n            <Flex className={style['message']} gap={12}>\n              <Image.Avatar className={style['message-avatar']} src={agentAvatar || defaultAvatar} size={28} />\n              {item.type === 'condition' && item === last(list) ? (\n                <Flex vertical gap={8} className={style['message-content']}>\n                  <div dangerouslySetInnerHTML={{ __html: md.render(item.chatbot_content || item.content || '') }} />\n                  <div>\n                    <CheckList loading={currentMessage} options={item.options} onChange={onConditionChange} />\n                  </div>\n                </Flex>\n              ) : (\n                <div className={style['message-content']} dangerouslySetInnerHTML={{ __html: md.render(item.chatbot_content || item.content || '') }} />\n              )}\n              <div className={style['message-black']} />\n            </Flex>\n          </Fragment>\n        );\n      })}\n      {currentMessage && (\n        <>\n          <Flex className={classnames(style['message'], style['is-user'])} gap={12}>\n            <Image.Avatar className={style['message-avatar']} gender=\"M\" size={28} />\n            <div className={style['message-content']} dangerouslySetInnerHTML={{ __html: md.render(currentMessage || '') }} />\n            <div className={style['message-black']} />\n          </Flex>\n          <Flex className={style['message']} gap={12}>\n            <Image.Avatar className={style['message-avatar']} src={agentAvatar || defaultAvatar} size={28} />\n            <div className={style['message-content']}>\n              <LoadingIcon />\n            </div>\n            <div className={style['message-black']} />\n          </Flex>\n        </>\n      )}\n      {children}\n    </Flex>\n  );\n});\n\nexport default MessageList;\n","import { useState, useEffect } from 'react';\n\nconst Countdown = ({ time, onComplete }) => {\n  const [current, setCurrent] = useState(time || 60);\n  const minute = Math.max(Math.floor(current / 60), 0),\n    second = Math.max(current % 60, 0);\n  useEffect(() => {\n    const nextTick = () => {\n      setCurrent(current => {\n        if (current <= 0) {\n          clearInterval(timer);\n          onComplete && onComplete();\n          return current;\n        }\n        return current - 1;\n      });\n    };\n    const timer = setInterval(nextTick, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return `${String(minute).padStart(2, '0')}:${String(second).padStart(2, '0')}`;\n};\n\nexport default Countdown;\n","import { createWithRemoteLoader } from '@kne/remote-loader';\nimport { Flex, Input, Space, App } from 'antd';\nimport { useState, useEffect, useRef } from 'react';\nimport Fetch from '@kne/react-fetch';\nimport classnames from 'classnames';\nimport last from 'lodash/last';\nimport MessageList from './MessageList';\nimport useRefCallback from '@kne/use-ref-callback';\nimport defaultAvatar from '../../common/defaultAvatar.png';\nimport enter from './enter.png';\nimport style from './style.module.scss';\nimport get from 'lodash/get';\nimport CheckList from './CheckList';\nimport Countdown from './Countdown';\n\nconst ChartBotMessage = createWithRemoteLoader({\n  modules: ['components-core:LoadingButton', 'components-core:Global@usePreset', 'components-core:Common@SimpleBar', 'components-core:Image']\n})(({ remoteModules, messageList, agentId, agentAvatar, sessionId, sessionName, startTime, lastTime, apis, onComplete, className, isEnd }) => {\n  const [LoadingButton, usePreset, SimpleBar, Image] = remoteModules;\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState(messageList || []);\n  const { ajax } = usePreset();\n  const { message } = App.useApp();\n  const [currentMessage, setCurrentMessage] = useState('');\n  const messageListRef = useRef(null);\n  const endHandler = useRefCallback(async () => {\n    const { data: resData } = await ajax(\n      Object.assign({}, apis.saveSession, {\n        urlParams: { session_id: sessionId },\n        data: {\n          status: 2\n        }\n      })\n    );\n    if (resData.code !== 0) {\n      return;\n    }\n    message.success('Success');\n    onComplete && onComplete();\n  });\n\n  useEffect(() => {\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n  }, [list, loading]);\n  const sendMessage = useRefCallback(async ({ type, value }) => {\n    setLoading(true);\n    const { data: resData } = await ajax(\n      Object.assign({}, apis.sendSessionMessage, {\n        urlParams: { session_id: sessionId },\n        data:\n          type === 'condition'\n            ? {\n                type,\n                user_selection: [value],\n                chat_message_id: last(list)?.id\n              }\n            : {\n                type,\n                user_content: value,\n                chat_message_id: last(list)?.id\n              }\n      })\n    );\n    setLoading(false);\n    if (resData.code !== 0) {\n      return;\n    }\n    setList(list => {\n      const newList = list.slice(0);\n      newList.push(resData.data);\n      return newList;\n    });\n    setCurrentMessage('');\n  });\n  useEffect(() => {\n    if (list.length === 0) {\n      sendMessage({ value: '' });\n    } else {\n      setLoading(false);\n    }\n  }, [list, sendMessage]);\n  return (\n    <Flex vertical className={classnames(className, style['chat'])} gap={8}>\n      <div className={style['title']}>\n        <Flex className={style['title-inner']} justify=\"space-between\" align=\"center\">\n          <Space>\n            <Image.Avatar src={agentAvatar || defaultAvatar} size={54} />\n            <div>{sessionName || 'Conversations'}</div>\n          </Space>\n          {!isEnd ? (\n            <>\n              <div className={style['title-time']}>\n                <Countdown time={lastTime} onComplete={endHandler} />\n              </div>\n              <LoadingButton type=\"primary\" shape=\"round\" onClick={endHandler}>\n                End\n              </LoadingButton>\n            </>\n          ) : (\n            <div className={style['over-tips']}>Session's over</div>\n          )}\n        </Flex>\n      </div>\n      <SimpleBar\n        className={classnames(style['message-list-outer'], 'message-list-scroller', {\n          [style['is-end']]: isEnd\n        })}\n        scrollableNodeProps={{ ref: messageListRef }}\n      >\n        <MessageList\n          agentAvatar={agentAvatar}\n          list={list}\n          startTime={startTime}\n          currentMessage={loading && currentMessage}\n          onConditionChange={item => {\n            setCurrentMessage(item.label);\n            sendMessage({ type: 'condition', value: item });\n          }}\n        />\n      </SimpleBar>\n      {!isEnd && (\n        <div className={style['footer']}>\n          {get(last(list), 'type') === 'condition' ? (\n            <div className={style['message-input-checklist']}>\n              <CheckList\n                loading={loading}\n                options={last(list).options || []}\n                onChange={item => {\n                  setCurrentMessage(item.label);\n                  sendMessage({ type: 'condition', value: item });\n                }}\n              />\n            </div>\n          ) : (\n            <div className={style['message-input-border']}>\n              <Flex className={style['message-input-outer']}>\n                <Input.TextArea\n                  disabled={loading}\n                  className={style['message-input']}\n                  autoSize={{ minRows: 1, maxRows: 6 }}\n                  placeholder=\"Chat with a robot\"\n                  value={currentMessage}\n                  onChange={e => {\n                    setCurrentMessage(e.target.value);\n                  }}\n                  onKeyUp={e => {\n                    if (e.key === 'Enter') {\n                      const msg = currentMessage.trim();\n                      setCurrentMessage(msg);\n                      if (msg.length === 0) {\n                        message.warning('The content sent cannot be empty');\n                        return;\n                      }\n                      return sendMessage({ type: 'text', value: msg });\n                    }\n                  }}\n                />\n                <LoadingButton\n                  className={style['message-sender']}\n                  type=\"primary\"\n                  loading={loading}\n                  icon={<img src={enter} alt=\"enter\" />}\n                  onClick={async () => {\n                    const msg = currentMessage.trim();\n                    if (msg.length === 0) {\n                      message.warning('The content sent cannot be empty');\n                      return;\n                    }\n                    return sendMessage({ type: 'text', value: msg.trim() });\n                  }}\n                />\n              </Flex>\n            </div>\n          )}\n        </div>\n      )}\n    </Flex>\n  );\n});\n\nconst ChartBot = createWithRemoteLoader({\n  modules: ['components-core:Global@usePreset']\n})(({ remoteModules, className, apiName, id, baseUrl, onComplete }) => {\n  const [usePreset] = remoteModules;\n  const { apis } = usePreset();\n  const currentApis = apis.agent[apiName];\n  return (\n    <Fetch\n      {...Object.assign({}, currentApis.getSessionDetail, {\n        urlParams: { session_id: id }\n      })}\n      render={({ data, reload }) => {\n        return (\n          <ChartBotMessage\n            className={className}\n            apis={currentApis}\n            sessionId={data.id}\n            startTime={data.start_time}\n            sessionName={data.session_name}\n            baseUrl={baseUrl}\n            onComplete={() => {\n              reload();\n            }}\n            lastTime={data.countdown_time}\n            isEnd={data.status === 2}\n            messageList={data.messages}\n            agentId={data.agent_application.id}\n            agentAvatar={get(data, 'agent_application.agent.avatar')}\n          />\n        );\n      }}\n    />\n  );\n});\n\nexport default ChartBot;\n\nexport { MessageList };\n"],"names":["_ref","loading","value","options","onChange","_jsxs","Row","gutter","children","_jsx","Col","Space","map","item","className","classnames","style","onClick","label","_circle","_circle2","_circle3","_excluded","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgLoading","svgRef","title","titleId","props","o","i","includes","_objectWithoutPropertiesLoose","getOwnPropertySymbols","s","propertyIsEnumerable","_objectWithoutProperties","width","height","viewBox","xmlns","ref","id","cx","cy","fill","begin","attributeName","dur","values","ForwardRef","md","markdown","createWithRemoteLoader","modules","remoteModules","list","startTime","currentMessage","agentAvatar","onConditionChange","Image","Flex","vertical","gap","justify","dayjs","format","index","Fragment","user_content","trim","Avatar","gender","size","dangerouslySetInnerHTML","__html","type","get","render","src","defaultAvatar","last","chatbot_content","content","CheckList","_Fragment","LoadingIcon","time","onComplete","current","setCurrent","useState","minute","Math","max","floor","second","useEffect","timer","setInterval","nextTick","clearInterval","concat","String","padStart","ChartBotMessage","messageList","agentId","sessionId","sessionName","lastTime","apis","isEnd","LoadingButton","usePreset","SimpleBar","setLoading","setList","ajax","message","App","useApp","setCurrentMessage","messageListRef","useRef","endHandler","useRefCallback","async","data","resData","saveSession","urlParams","session_id","status","code","success","scrollTop","scrollHeight","sendMessage","_last","_last2","_ref2","sendSessionMessage","user_selection","chat_message_id","newList","slice","push","align","Countdown","shape","scrollableNodeProps","MessageList","Input","TextArea","disabled","autoSize","minRows","maxRows","placeholder","target","onKeyUp","key","msg","warning","icon","alt","_ref3","apiName","baseUrl","currentApis","agent","Fetch","_objectSpread","getSessionDetail","_ref4","reload","start_time","session_name","countdown_time","messages","agent_application"],"sourceRoot":""}