{"version":3,"file":"static/js/7354.0879e4cd.chunk.js","mappings":";qQAMA,MAqBA,GArBsBA,EAAAA,EAAAA,wBAAuB,CAC3CC,QAAS,CAAC,qCADUD,EAEnBE,IAA8C,IAA7C,cAAEC,EAAa,QAAEC,EAAO,KAAEC,EAAI,MAAEC,GAAOJ,EACzC,MAAOK,GAAaJ,GACbK,IAAgBC,EAAAA,EAAAA,oBACjB,KAAEC,GAASH,IACjB,OACEI,EAAAA,EAAAA,KAACC,IAAK,IACAC,OAAOC,OAAO,CAAC,EAAGJ,EAAKK,MAAMC,cAAcC,eAAgB,CAC7DC,KAAM,CACJb,KAAMA,GAAQG,EAAaW,IAAI,WAGnCb,MAAOA,IAASK,EAAAA,EAAAA,KAACS,EAAAA,SAAQ,CAACC,GAAI,GAAGjB,YACjCkB,OAAQC,IAAe,IAADC,EAAA,IAAb,KAAEN,GAAMK,EACf,OAAOZ,EAAAA,EAAAA,KAACc,EAAAA,QAAO,CAACC,UAAWC,EAAAA,EAAM,YAAaC,GAAgB,QAAdJ,EAAEN,EAAKW,eAAO,IAAAL,OAAA,EAAZA,EAAcI,GAAIE,MAAOZ,EAAKY,MAAOC,QAAQ,iBAAkB,GAEnH,qBCvBN,IAAIC,EAAYC,EAAQ,OACpBC,EAAaD,EAAQ,OACrBE,EAAaF,EAAQ,OACrBG,EAAeH,EAAQ,MACvBI,EAAeJ,EAAQ,OACvBK,EAAUL,EAAQ,OAClBM,EAAWN,EAAQ,OACnBO,EAAaP,EAAQ,OACrBQ,EAAWR,EAAQ,OACnBS,EAAeT,EAAQ,OAuD3BU,EAAOC,QAvBP,SAAmBC,EAAQC,EAAUC,GACnC,IAAIC,EAAQV,EAAQO,GAChBI,EAAYD,GAAST,EAASM,IAAWH,EAAaG,GAG1D,GADAC,EAAWV,EAAaU,EAAU,GACf,MAAfC,EAAqB,CACvB,IAAIG,EAAOL,GAAUA,EAAOM,YAE1BJ,EADEE,EACYD,EAAQ,IAAIE,EAAO,GAE1BT,EAASI,IACFL,EAAWU,GAAQhB,EAAWG,EAAaQ,IAG3C,CAAC,CAEnB,CAIA,OAHCI,EAAYjB,EAAYG,GAAYU,GAAQ,SAASO,EAAOC,EAAOR,GAClE,OAAOC,EAASC,EAAaK,EAAOC,EAAOR,EAC7C,IACOE,CACT,gCCrDa,IAAIO,EAAErB,EAAQ,OAASsB,EAAEC,OAAOC,IAAI,iBAAiBC,EAAEF,OAAOC,IAAI,kBAAkBE,EAAE9C,OAAO+C,UAAUC,eAAeC,EAAER,EAAES,mDAAmDC,kBAAkBC,EAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,EAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,CAAC,EAAEC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAhF,IAASD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEN,MAAMU,EAAE,GAAGJ,EAAEN,UAAK,IAASM,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAEb,EAAEmB,KAAKN,EAAEE,KAAKT,EAAEJ,eAAea,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEQ,aAAa,IAAIL,KAAKF,EAAED,EAAEQ,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAASzB,EAAE0B,KAAKV,EAAEL,IAAIU,EAAET,IAAIU,EAAEK,MAAMP,EAAEQ,OAAOrB,EAAEsB,QAAQ,CAACxC,EAAQyC,SAAS3B,EAAEd,EAAQ0C,IAAIhB,EAAE1B,EAAQ2C,KAAKjB,iDCT1W,SAAgB,WAAW,8DCEzB3B,EAAOC,QAAU,EAAjBD,6ZCmBF,MAAM6C,GAAUxF,EAAAA,EAAAA,wBAAuB,CACrCC,QAAS,CAAC,6BADID,EAEbE,IAA+C,IAA9C,cAAEC,EAAa,MAAEsF,EAAK,KAAEC,EAAI,SAAEC,GAAUzF,EAC1C,MAAO0F,GAAYzF,EACnB,OACE0F,EAAAA,EAAAA,MAACD,EAAQ,CAAClE,UAAWC,EAAAA,EAAM,YAAYgE,SAAA,EACrChF,EAAAA,EAAAA,KAACiF,EAASE,KAAI,CAACL,MAAOA,EAAME,SAAEA,KAC9BhF,EAAAA,EAAAA,KAACiF,EAAQ,CAAAD,UACPhF,EAAAA,EAAAA,KAACoF,EAAAA,KAAI,CAACC,QAAQ,WAAUL,UACtBhF,EAAAA,EAAAA,KAACsF,EAAAA,OAAM,CAACC,MAAM,QAAQC,OAAO,SAASC,KAAMV,EAAMT,KAAK,UAASU,SAAC,gBAK5D,IAITU,EAAgBC,IACpB,MAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,UAAYJ,EAEhB,MAAMK,EAAU,GACVC,EAAQL,EAAIM,iBAAiB,KACnC,GAAGC,MAAMhC,KAAK8B,EAAO,GAAGG,SAAQrB,IAC9B,GAAI,qBAAqBsB,KAAKtB,EAAKU,MAAO,CACxC,MAAMa,EAAQT,SAASC,cAAc,SACrCQ,EAAMC,aAAa,MAAOxB,EAAKU,MAC/Ba,EAAMC,aAAa,WAAY,IAC/BP,EAAQQ,KAAKF,EACf,CACA,GAAI,uCAAuCD,KAAKtB,EAAKU,MAAO,CAC1D,MAAMgB,EAAMZ,SAASC,cAAc,OACnCW,EAAIF,aAAa,MAAOxB,EAAKU,MAC7BO,EAAQQ,KAAKC,EACf,KAGF,MAAMC,EAASd,EAAIM,iBAAiB,aAEpC,GAAGC,MAAMhC,KAAKuC,EAAQ,GAAGN,SAAQO,IAC/BX,EAAQQ,KAAKG,EAAM,IAGrB,MAAMC,EAAahB,EAAIM,iBAAiB,oBAExC,OADAF,EAAQQ,QAAQ,GAAGL,MAAMhC,KAAKyC,EAAY,IACnCZ,EAAQa,KAAIC,GAAWA,EAAQC,WAAU,EAG5CC,EAAcpG,IAAmB,IAAlB,SAAEqG,GAAUrG,EAC/B,MAAM4C,GAAM0D,EAAAA,EAAAA,QAAO,MACbC,GAAaD,EAAAA,EAAAA,QAAO,CAAEE,OAAQ,GAAI1E,OAAQ,KACzC2E,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,GAC3CC,GAAUC,EAAAA,EAAAA,UAAQ,IACfjH,IAAIkH,IAAKT,GAAW,oBAAsB,IAChD,CAACA,IAEEtG,EAASA,CAAC6G,EAAS9E,KAErB1C,EAAAA,EAAAA,KAAC2H,IAAc,CACbC,cAAelC,EACfkB,WAAY,CACViB,KAAI,OACJhD,WAEFlE,OAAQyG,IACFA,GAAUA,EAAOU,OAAS,IAC5BX,EAAW1C,QAAU,CAAE2C,SAAQ1E,UAEjC4E,IAAkBH,EAAW1C,SAAW0C,EAAW1C,QAAQ2C,QAAUD,EAAW1C,QAAQ2C,OAAOU,OAAS,KAEtG9H,EAAAA,EAAAA,KAAC+H,IAAS,CACRC,SAAU,IACVC,SAAU,IACV3D,KAAM,CAAC,MAAO,UACd4D,MAAOA,KACL,MAAM5B,EAAQ9C,EAAIiB,QAAQyB,iBAAiB,SAC3C,GAAGC,MAAMhC,KAAKmC,EAAO,GAAGF,SAAQE,IAC9BA,EAAM6B,OAAQ,EACd7B,EAAM8B,MAAM,GACZ,EACFpD,SAEDmC,EAAW1C,SACV0C,EAAW1C,QAAQ2C,QACnBD,EAAW1C,QAAQ2C,OAAOP,KAAI,CAACwB,EAAM3F,KAC5B1C,EAAAA,EAAAA,KAAA,OAAAgF,SAAmDqD,GAAzC,GAAGlB,EAAW1C,QAAQ/B,SAASA,UAIxDsC,SAEDwC,IAKP,OACExH,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAM,gBAAiBwC,IAAKA,EAAIwB,SAC7CqC,GAAerH,EAAAA,EAAAA,KAAA,OAAAgF,SAAkBrE,EAAOH,IAAI8H,IAAMrB,GAAW,oBAAsB,GAAI,IAA/D,UAA2EjH,EAAAA,EAAAA,KAAA,OAAAgF,SAAoBrE,EAAO6G,EAASP,EAASa,OAAS,IAA7C,YACzG,EAIJS,GAAkBlJ,EAAAA,EAAAA,wBAAuB,CAC7CC,QAAS,CAAC,gCAAiC,mCAAoC,mCAAoC,0BAD7FD,EAErBmJ,IAA6J,IAA5J,cAAEhJ,EAAa,YAAEiJ,EAAW,QAAEC,EAAO,YAAEC,EAAW,UAAEC,EAAS,YAAEC,EAAW,UAAEC,EAAS,SAAEC,EAAQ,KAAEhJ,EAAI,WAAEiJ,EAAU,UAAEjI,EAAS,MAAEkI,EAAK,SAAEC,EAAQ,MAAE/H,GAAOqH,EACxJ,MAAOW,EAAevJ,EAAWwJ,EAAWC,GAAS7J,GAC9C8J,EAASC,IAAchC,EAAAA,EAAAA,WAAS,IAChCiC,EAASC,IAAclC,EAAAA,EAAAA,WAAS,IAChCmC,EAAMC,IAAWpC,EAAAA,EAAAA,UAASkB,GAAe,KAC1C,KAAEmB,GAAShK,KACX,QAAEiK,GAAYC,EAAAA,IAAIC,UACjBC,EAAgBC,IAAqB1C,EAAAA,EAAAA,UAAS,KAC9C2C,EAAaC,IAAkB5C,EAAAA,EAAAA,WAAS,GACzC6C,GAAiBlD,EAAAA,EAAAA,QAAO,OACvBmD,EAAOC,IAAY/C,EAAAA,EAAAA,UAASgD,IAAAA,QAAqB,iCAAmC,CAAC,MAAO,QAC7FC,GAAatD,EAAAA,EAAAA,QAAO,MACpBuD,IAAWvD,EAAAA,EAAAA,QAAO,MAClBwD,GAAaC,KAAeC,UAChC,MAAQrK,KAAMsK,SAAkBjB,EAC9B1J,OAAOC,OAAO,CAAC,EAAGJ,EAAK+K,YAAa,CAClCC,UAAW,CAAEC,WAAYpC,GACzBqC,OAAQ,CAAE9J,SACVZ,KAAM,CACJ2K,OAAQ,MAIO,IAAjBL,EAAQnL,OAGZmK,EAAQsB,QAAQ,WAChBnC,GAAcA,IAAY,KAErBoC,GAAUC,KAAe9D,EAAAA,EAAAA,WAAS,IAEzC+D,EAAAA,EAAAA,YAAU,KACRlB,EAAe3F,QAAQ8G,UAAYnB,EAAe3F,QAAQ+G,YAAY,GACrE,CAAC9B,EAAMJ,IACV,MAAMmC,GAAcd,KAAeC,UAA4B,IAADc,EAAA,IAApB,KAAEpH,EAAI,MAAE7B,GAAOkJ,EACvDpC,GAAW,GACXE,GAAW,GACX,MAAMmC,EAAmE,QAAtDF,EAAGhE,IAAKgC,EAAKmC,QAAOC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAe,UAAVC,CAAiB,YAAE,IAAAL,OAAA,EAAnDA,EAAqDzK,GAErE+K,EAAa9L,OAAOC,OAAO,CAAC,EAAGJ,EAAKkM,yBAA0B,CAClElB,UAAW,CAAEC,WAAYpC,GACzBqC,OAAQ,CAAE9J,SACVZ,KACW,cAAT+D,EACI,CACEA,OACA4H,eAAgB,CAACzJ,GACjB0J,gBAAiBP,GAEnB,CACEtH,OACA8H,aAAc3J,EACd0J,gBAAiBP,GAEzBS,UAAW9L,IACToJ,GAAQD,IACN,MAAM4C,EAAU5C,EAAKvD,MAAM,GACrBzD,EAAQ4J,EAAQC,WAAUC,IAAA,IAAC,GAAEvL,GAAIuL,EAAA,OAAKvL,IAAOV,EAAKU,EAAE,IAa1D,OAXe,IAAXyB,EACF4J,EAAQ9F,KAAKjG,GAEb+L,EAAQG,OACN/J,EACA,EACAxC,OAAOC,OAAO,CAAC,EAAGmM,EAAQ5J,GAAQnC,EAAM,CACtCmM,iBAAkBJ,EAAQ5J,GAAOgK,iBAAmB,KAAOnM,EAAKmM,iBAAmB,OAIlFJ,CAAO,GACd,IAGN1C,EAAK+C,eAAeX,SACdY,EAAAA,EAAAA,GAAIZ,GACVzC,GAAW,GACXU,EAAkB,IAClBR,GAAW,GACXgB,GAAShG,SAAWgG,GAAShG,QAAQoI,OAAO,KAG9CvB,EAAAA,EAAAA,YAAU,KACY,IAAhB5B,EAAK5B,OACP2D,GAAY,CAAEhJ,MAAO,KAErB8G,GAAW,EACb,GACC,CAACG,EAAM+B,KAEV,MAAMqB,IACJ5H,EAAAA,EAAAA,MAAA6H,EAAAA,SAAA,CAAA/H,SAAA,EACEhF,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAa,MAAEgE,UAC7BE,EAAAA,EAAAA,MAACE,EAAAA,KAAI,CAACrE,UAAWC,EAAAA,EAAM,eAAgBqE,QAAQ,gBAAgB2H,MAAM,SAAQhI,SAAA,EAC3EE,EAAAA,EAAAA,MAACE,EAAAA,KAAI,CAAC6H,IAAK,EAAGC,KAAM,EAAElI,SAAA,EACpBhF,EAAAA,EAAAA,KAACoF,EAAAA,KAAI,CAAC8H,KAAM,EAAElI,UACZhF,EAAAA,EAAAA,KAACqJ,EAAM8D,OAAM,CAACC,IAAKzE,GAAe0E,EAAeC,KAAM,QAEzDpI,EAAAA,EAAAA,MAACE,EAAAA,KAAI,CAAC8H,KAAM,EAAGK,UAAQ,EAAClI,QAAQ,SAAQL,SAAA,EACtChF,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAM,iBAAiBgE,SAAE6D,GAAe,mBACtDI,GAASF,IACT/I,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAM,cAAcgE,UAClChF,EAAAA,EAAAA,KAACwN,EAAAA,EAAS,CAACC,KAAM1E,EAAUC,WAAY0B,cAK/C1K,EAAAA,EAAAA,KAACoF,EAAAA,KAAI,CAAAJ,SACF+D,IACGE,GAKAjJ,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAM,aAAagE,SAAC,sBAJpChF,EAAAA,EAAAA,KAACmJ,EAAa,CAAC7E,KAAK,UAAUiB,MAAM,QAAQmI,QAAShD,GAAW1F,SAAC,iBAS3EE,EAAAA,EAAAA,MAACE,EAAAA,KAAI,CAACmI,UAAQ,EAACN,IAAK,EAAGlM,UAAWC,EAAAA,EAAM,YAAYgE,SAAA,EAClDhF,EAAAA,EAAAA,KAACoJ,EAAS,CACRrI,UAAW4M,IAAW3M,EAAAA,EAAM,sBAAuB,wBAAyB,CAC1E,CAACA,EAAAA,EAAM,WAAYiI,IAErB2E,oBAAqB,CAAEpK,IAAK4G,GAAiBpF,UAE7ChF,EAAAA,EAAAA,KAAC6N,EAAAA,EAAW,CACV5E,MAAOA,EACPN,YAAaA,EACbe,KAAMA,EACNZ,UAAWA,EACXkB,eAAgBV,GAAWU,EAC3B8D,SAAUvN,IACRkL,GAAY,CAAEnH,KAAM/D,EAAK+D,KAAM7B,MAAOlC,EAAK6L,cAAe,EAE5D2B,kBAAmBC,IACjB/D,EAAkB+D,EAAKC,OACvBxC,GAAY,CAAEnH,KAAM,YAAa7B,MAAOuL,GAAO,OAInD/E,IACA/D,EAAAA,EAAAA,MAAA,OAAKnE,UAAWC,EAAAA,EAAc,OAAEgE,SAAA,CACD,cAA5BxE,IAAIkH,IAAKgC,GAAO,SACf1J,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAM,2BAA2BgE,UAC/ChF,EAAAA,EAAAA,KAACkO,EAAAA,EAAS,CACR5E,QAASA,EACT6E,QAASzG,IAAKgC,GAAMyE,SAAW,GAC/BC,SAAUJ,IACR/D,EAAkB+D,EAAKC,OACvBxC,GAAY,CAAEnH,KAAM,YAAa7B,MAAOuL,GAAO,OAKrDhO,EAAAA,EAAAA,KAAA+M,EAAAA,SAAA,CAAA/H,SACGoG,IACCpL,EAAAA,EAAAA,KAACqO,EAAAA,EAAM,CACL3F,QAASA,EACT0F,SAAUE,IACRrE,EAAkBqE,EAAI,EAExBtF,WAAYsF,IAEV,GADAjD,IAAY,GACRiD,EACF,OAAO7C,GAAY,CAAEnH,KAAM,OAAQ7B,MAAO6L,GAC5C,KAIJtO,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAAA,EAAM,wBAAwBgE,UAC5CE,EAAAA,EAAAA,MAACE,EAAAA,KAAI,CAACrE,UAAWC,EAAAA,EAAM,uBAAwBgM,MAAM,SAAQhI,SAAA,EAC3DhF,EAAAA,EAAAA,KAACuO,EAAAA,MAAMC,SAAQ,CACbhL,IAAKiH,GACLgE,mBAAoBA,KAClBtE,GAAe,GACfK,EAAW/F,SAAWiK,aAAalE,EAAW/F,QAAQ,EAExDkK,iBAAkBA,KAChBnE,EAAW/F,QAAUmK,YAAW,KAC9BzE,GAAe,EAAM,GACpB,EAAE,EAEP0E,SAAUvF,GAAWE,EACrBzI,UAAWC,EAAAA,EAAM,iBACjB8N,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCC,YAAY,cACZxM,MAAOuH,EACPoE,SAAUnK,IACRgG,EAAkBhG,EAAEuB,OAAO/C,MAAM,EAEnCyM,QAASjL,IACP,GAAc,UAAVA,EAAEV,MAAoB2G,EAAa,CACrC,MAAMoE,EAAMtE,EAAemF,OAE3B,OADAlF,EAAkBqE,GACC,IAAfA,EAAIxG,YACN+B,EAAQuF,QAAQ,oCAGX3D,GAAY,CAAEnH,KAAM,OAAQ7B,MAAO6L,GAC5C,MAGJtO,EAAAA,EAAAA,KAACsF,EAAAA,OAAM,CACLgI,KAAK,QACL+B,MAAMrP,EAAAA,EAAAA,KAACsP,EAAAA,YAAW,IAClB/J,MAAM,SACNjB,KAAK,OACLoJ,QAASA,KACPrC,IAAY,EAAK,KAGrBrL,EAAAA,EAAAA,KAACmJ,EAAa,CACZpI,UAAWC,EAAAA,EAAM,kBACjBsD,KAAK,UACLgF,QAASA,GAAWE,EACpB6F,MAAMrP,EAAAA,EAAAA,KAAA,OAAKoN,IAAKmC,EAAOC,IAAI,UAC3B9B,QAAS9C,UACP,MAAM0D,EAAMtE,EAAemF,OAC3B,GAAmB,IAAfb,EAAIxG,OAIR,OAAO2D,GAAY,CAAEnH,KAAM,OAAQ7B,MAAO6L,EAAIa,SAH5CtF,EAAQuF,QAAQ,mCAGqC,YAQrEpP,EAAAA,EAAAA,KAACyP,EAAAA,WAAWC,KAAI,CAAC3O,UAAWC,EAAAA,EAAY,KAAGwE,OAAO,SAASC,KAAM,IAAGkK,EAAAA,EAAAA,eAAc,gCAAgC3K,SAAC,+BAQ7H,OACEhF,EAAAA,EAAAA,KAACoF,EAAAA,KAAI,CAACmI,UAAQ,EAACxM,UAAW4M,IAAW5M,EAAWC,EAAAA,EAAY,MAAGgE,SAC5DkE,GACChE,EAAAA,EAAAA,MAAC0K,EAAAA,SAAQ,CACPC,SAAUxF,IACRE,IAAAA,QAAqB,+BAAgCF,GACrDC,EAASD,EAAM,EACfrF,SAAA,EAEFhF,EAAAA,EAAAA,KAAC4P,EAAAA,SAASE,MAAK,CAACxC,KAAMjD,EAAM,GAAGrF,SAC5B0E,EAAK5B,OAAS,GACb9H,EAAAA,EAAAA,KAACoJ,EAAS,CAACrI,UAAW4M,IAAW3M,EAAAA,EAAM,sBAAuB,sBAAsBgE,UAClFhF,EAAAA,EAAAA,KAACgH,EAAW,CAACC,SAAUyC,EAAMF,QAASA,OAGxCxJ,EAAAA,EAAAA,KAACoF,EAAAA,KAAI,CAAC4H,MAAM,SAAS3H,QAAQ,SAASrE,MAAO,CAAE+O,OAAQ,QAAS/K,UAC9DhF,EAAAA,EAAAA,KAACgQ,EAAAA,KAAI,SAIXhQ,EAAAA,EAAAA,KAAC4P,EAAAA,SAASE,MAAK,CAACxC,KAAMjD,EAAM,GAAGrF,SAAE8H,QAGnCA,IAEG,IA0CX,GAtCiBzN,EAAAA,EAAAA,wBAAuB,CACtCC,QAAS,CAAC,qCADKD,EAEd4Q,IAA4E,IAA3E,cAAEzQ,EAAa,UAAEuB,EAAS,QAAEK,EAAO,GAAEH,EAAE,QAAExB,EAAO,MAAE0B,EAAK,WAAE6H,GAAYiH,EACvE,MAAOrQ,GAAaJ,GACd,KAAEO,GAASH,IACXsQ,EAAcnQ,EAAKK,MAAMgB,GAC/B,OACEpB,EAAAA,EAAAA,KAACC,IAAK,IACAC,OAAOC,OAAO,CAAC,EAAG+P,EAAYC,iBAAkB,CAClDpF,UAAW,CAAEC,WAAY/J,GACzBgK,OAAQ,CAAE9J,WAEZR,OAAQyP,IAAuB,IAAtB,KAAE7P,EAAI,OAAE8P,GAAQD,EACvB,OACEpQ,EAAAA,EAAAA,KAACuI,EAAe,CACdpH,MAAOA,EACPJ,UAAWA,EACXhB,KAAMmQ,EACNtH,UAAWrI,EAAKU,GAChB6H,UAAWvI,EAAK+P,WAChBzH,YAAatI,EAAKgQ,aAClB9Q,QAASA,EACTuJ,WAAYA,KACVqH,GAAQ,EAEVnH,SAAU3I,EAAKH,MAAMoQ,mBAAqB3K,SAAS4K,gBAAgBC,aAAe,IAClF3H,SAAUxI,EAAKoQ,eACf1H,MAAuB,IAAhB1I,EAAK2K,OACZzC,YAAalI,EAAK0G,SAClByB,QAASnI,EAAKH,MAAMa,GACpB0H,YAAanI,IAAID,EAAM,mCACvB,GAGN","sources":["components/ChatBotClient/index.js","../node_modules/lodash/transform.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://@kne-components/leapin-ai-agent/./src/components/ChatBotClient/style.module.scss?eb00","../node_modules/react/jsx-runtime.js","components/ChatBot/index.js"],"sourcesContent":["import { createWithRemoteLoader } from '@kne/remote-loader';\nimport Fetch from '@kne/react-fetch';\nimport { Navigate, useSearchParams } from 'react-router-dom';\nimport ChatBot from '@components/ChatBot';\nimport style from './style.module.scss';\n\nconst ChatBotClient = createWithRemoteLoader({\n  modules: ['components-core:Global@usePreset']\n})(({ remoteModules, baseUrl, code, error }) => {\n  const [usePreset] = remoteModules;\n  const [searchParams] = useSearchParams();\n  const { apis } = usePreset();\n  return (\n    <Fetch\n      {...Object.assign({}, apis.agent.chatBotClient.getTokenByCode, {\n        data: {\n          code: code || searchParams.get('code')\n        }\n      })}\n      error={error || <Navigate to={`${baseUrl}/error`} />}\n      render={({ data }) => {\n        return <ChatBot className={style['chat-bot']} id={data.session?.id} token={data.token} apiName=\"chatBotClient\" />;\n      }}\n    />\n  );\n});\n\nexport default ChatBotClient;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","// extracted by mini-css-extract-plugin\nexport default {\"chat-bot\":\"style_chat-bot__6-RYh__pIGCk\"};","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { createWithRemoteLoader, getPublicPath } from '@kne/remote-loader';\nimport { Flex, Input, App, Spin, Splitter, Button, Card, Typography } from 'antd';\nimport { useState, useEffect, useRef, useMemo } from 'react';\nimport Fetch from '@kne/react-fetch';\nimport classnames from 'classnames';\nimport last from 'lodash/last';\nimport first from 'lodash/first';\nimport MessageList from './MessageList';\nimport useRefCallback from '@kne/use-ref-callback';\nimport { AudioFilled } from '@ant-design/icons';\nimport defaultAvatar from '../../common/defaultAvatar.png';\nimport enter from './enter.png';\nimport style from './style.module.scss';\nimport get from 'lodash/get';\nimport CheckList from './CheckList';\nimport Countdown from './Countdown';\nimport MarkdownRender from '@kne/markdown-components-render';\nimport sse from '@root/common/sse';\nimport localStorage from '@kne/local-storage';\nimport QueueAnim from 'rc-queue-anim';\nimport Record from './Record';\n\nconst JobCard = createWithRemoteLoader({\n  modules: ['components-core:InfoPage']\n})(({ remoteModules, title, link, children }) => {\n  const [InfoPage] = remoteModules;\n  return (\n    <InfoPage className={style['job-card']}>\n      <InfoPage.Part title={title}>{children}</InfoPage.Part>\n      <InfoPage>\n        <Flex justify=\"flex-end\">\n          <Button shape=\"round\" target=\"_blank\" href={link} type=\"primary\">\n            Apply\n          </Button>\n        </Flex>\n      </InfoPage>\n    </InfoPage>\n  );\n});\n\nconst transformHTML = html => {\n  const dom = document.createElement('div');\n  dom.innerHTML = html;\n  //获取所有a链接和.yaml-components节点，其他删掉\n  const results = [];\n  const links = dom.querySelectorAll('a');\n  [].slice.call(links, 0).forEach(link => {\n    if (/\\.(mp4|webm|ogv)$/i.test(link.href)) {\n      const video = document.createElement('video');\n      video.setAttribute('src', link.href);\n      video.setAttribute('controls', '');\n      results.push(video);\n    }\n    if (/\\.(jpg|jpeg|png|gif|bmp|tiff|webp)$/i.test(link.href)) {\n      const img = document.createElement('img');\n      img.setAttribute('src', link.href);\n      results.push(img);\n    }\n  });\n\n  const medias = dom.querySelectorAll('img,video');\n\n  [].slice.call(medias, 0).forEach(media => {\n    results.push(media);\n  });\n\n  const components = dom.querySelectorAll('.yaml-components');\n  results.push(...[].slice.call(components, 0));\n  return results.map(element => element.outerHTML);\n};\n\nconst SideMessage = ({ messages }) => {\n  const ref = useRef(null);\n  const contentRef = useRef({ output: '', index: -1 });\n  const [visibleFirst, setVisibleFirst] = useState(false);\n  const content = useMemo(() => {\n    return get(last(messages), 'chatbot_content') || '';\n  }, [messages]);\n\n  const render = (content, index) => {\n    return (\n      <MarkdownRender\n        htmlTransform={transformHTML}\n        components={{\n          Card,\n          JobCard\n        }}\n        render={output => {\n          if (output && output.length > 0) {\n            contentRef.current = { output, index };\n          }\n          setVisibleFirst(!(contentRef.current && contentRef.current.output && contentRef.current.output.length > 0));\n          return (\n            <QueueAnim\n              duration={1000}\n              interval={500}\n              type={['top', 'bottom']}\n              onEnd={() => {\n                const video = ref.current.querySelectorAll('video');\n                [].slice.call(video, 0).forEach(video => {\n                  video.muted = true;\n                  video.play();\n                });\n              }}\n            >\n              {contentRef.current &&\n                contentRef.current.output &&\n                contentRef.current.output.map((node, index) => {\n                  return <div key={`${contentRef.current.index}-${index}`}>{node}</div>;\n                })}\n            </QueueAnim>\n          );\n        }}\n      >\n        {content}\n      </MarkdownRender>\n    );\n  };\n\n  return (\n    <div className={style['side-content']} ref={ref}>\n      {visibleFirst ? <div key=\"first\">{render(get(first(messages), 'chatbot_content') || '', 0)}</div> : <div key=\"content\">{render(content, messages.length - 1)}</div>}\n    </div>\n  );\n};\n\nconst ChartBotMessage = createWithRemoteLoader({\n  modules: ['components-core:LoadingButton', 'components-core:Global@usePreset', 'components-core:Common@SimpleBar', 'components-core:Image']\n})(({ remoteModules, messageList, agentId, agentAvatar, sessionId, sessionName, startTime, lastTime, apis, onComplete, className, isEnd, openSide, token }) => {\n  const [LoadingButton, usePreset, SimpleBar, Image] = remoteModules;\n  const [loading, setLoading] = useState(true);\n  const [evening, setEvening] = useState(false);\n  const [list, setList] = useState(messageList || []);\n  const { ajax } = usePreset();\n  const { message } = App.useApp();\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isComposing, setIsComposing] = useState(false);\n  const messageListRef = useRef(null);\n  const [sizes, setSizes] = useState(localStorage.getItem('LEAPIN_AI_AGENT_WINDOW_SIZES') || ['70%', '30%']);\n  const inputTimer = useRef(null);\n  const inputRef = useRef(null);\n  const endHandler = useRefCallback(async () => {\n    const { data: resData } = await ajax(\n      Object.assign({}, apis.saveSession, {\n        urlParams: { session_id: sessionId },\n        params: { token },\n        data: {\n          status: 2\n        }\n      })\n    );\n    if (resData.code !== 0) {\n      return;\n    }\n    message.success('Success');\n    onComplete && onComplete();\n  });\n  const [isRecord, setIsRecord] = useState(false);\n\n  useEffect(() => {\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n  }, [list, loading]);\n  const sendMessage = useRefCallback(async ({ type, value }) => {\n    setLoading(true);\n    setEvening(true);\n    const prevMessageId = last(list.filter(({ event }) => event !== 'error'))?.id;\n\n    const sseOptions = Object.assign({}, apis.sendSessionMessageStream, {\n      urlParams: { session_id: sessionId },\n      params: { token },\n      data:\n        type === 'condition'\n          ? {\n              type,\n              user_selection: [value],\n              chat_message_id: prevMessageId\n            }\n          : {\n              type,\n              user_content: value,\n              chat_message_id: prevMessageId\n            },\n      eventEmit: data => {\n        setList(list => {\n          const newList = list.slice(0);\n          const index = newList.findIndex(({ id }) => id === data.id);\n\n          if (index === -1) {\n            newList.push(data);\n          } else {\n            newList.splice(\n              index,\n              1,\n              Object.assign({}, newList[index], data, {\n                chatbot_content: (newList[index].chatbot_content || '') + (data.chatbot_content || '')\n              })\n            );\n          }\n          return newList;\n        });\n      }\n    });\n    ajax.parseUrlParams(sseOptions);\n    await sse(sseOptions);\n    setLoading(false);\n    setCurrentMessage('');\n    setEvening(false);\n    inputRef.current && inputRef.current.focus();\n  });\n\n  useEffect(() => {\n    if (list.length === 0) {\n      sendMessage({ value: '' });\n    } else {\n      setLoading(false);\n    }\n  }, [list, sendMessage]);\n\n  const botBody = (\n    <>\n      <div className={style['title']}>\n        <Flex className={style['title-inner']} justify=\"space-between\" align=\"center\">\n          <Flex gap={8} flex={1}>\n            <Flex flex={0}>\n              <Image.Avatar src={agentAvatar || defaultAvatar} size={54} />\n            </Flex>\n            <Flex flex={1} vertical justify=\"center\">\n              <div className={style['title-content']}>{sessionName || 'Conversations'}</div>\n              {!isEnd && lastTime && (\n                <div className={style['title-time']}>\n                  <Countdown time={lastTime} onComplete={endHandler} />\n                </div>\n              )}\n            </Flex>\n          </Flex>\n          <Flex>\n            {lastTime &&\n              (!isEnd ? (\n                <LoadingButton type=\"primary\" shape=\"round\" onClick={endHandler}>\n                  End\n                </LoadingButton>\n              ) : (\n                <div className={style['over-tips']}>Conversation End</div>\n              ))}\n          </Flex>\n        </Flex>\n      </div>\n      <Flex vertical gap={8} className={style['bot-body']}>\n        <SimpleBar\n          className={classnames(style['message-list-outer'], 'message-list-scroller', {\n            [style['is-end']]: isEnd\n          })}\n          scrollableNodeProps={{ ref: messageListRef }}\n        >\n          <MessageList\n            isEnd={isEnd}\n            agentAvatar={agentAvatar}\n            list={list}\n            startTime={startTime}\n            currentMessage={loading && currentMessage}\n            onResend={data => {\n              sendMessage({ type: data.type, value: data.user_content });\n            }}\n            onConditionChange={item => {\n              setCurrentMessage(item.label);\n              sendMessage({ type: 'condition', value: item });\n            }}\n          />\n        </SimpleBar>\n        {!isEnd && (\n          <div className={style['footer']}>\n            {get(last(list), 'type') === 'condition' ? (\n              <div className={style['message-input-checklist']}>\n                <CheckList\n                  loading={loading}\n                  options={last(list).options || []}\n                  onChange={item => {\n                    setCurrentMessage(item.label);\n                    sendMessage({ type: 'condition', value: item });\n                  }}\n                />\n              </div>\n            ) : (\n              <>\n                {isRecord ? (\n                  <Record\n                    agentId={agentId}\n                    onChange={msg => {\n                      setCurrentMessage(msg);\n                    }}\n                    onComplete={msg => {\n                      setIsRecord(false);\n                      if (msg) {\n                        return sendMessage({ type: 'text', value: msg });\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className={style['message-input-border']}>\n                    <Flex className={style['message-input-outer']} align=\"center\">\n                      <Input.TextArea\n                        ref={inputRef}\n                        onCompositionStart={() => {\n                          setIsComposing(true);\n                          inputTimer.current && clearTimeout(inputTimer.current);\n                        }}\n                        onCompositionEnd={() => {\n                          inputTimer.current = setTimeout(() => {\n                            setIsComposing(false);\n                          }, 0);\n                        }}\n                        disabled={loading || evening}\n                        className={style['message-input']}\n                        autoSize={{ minRows: 1, maxRows: 6 }}\n                        placeholder=\"Ask Elsa...\"\n                        value={currentMessage}\n                        onChange={e => {\n                          setCurrentMessage(e.target.value);\n                        }}\n                        onKeyUp={e => {\n                          if (e.key === 'Enter' && !isComposing) {\n                            const msg = currentMessage.trim();\n                            setCurrentMessage(msg);\n                            if (msg.length === 0) {\n                              message.warning('The content sent cannot be empty');\n                              return;\n                            }\n                            return sendMessage({ type: 'text', value: msg });\n                          }\n                        }}\n                      />\n                      <Button\n                        size=\"small\"\n                        icon={<AudioFilled />}\n                        shape=\"circle\"\n                        type=\"link\"\n                        onClick={() => {\n                          setIsRecord(true);\n                        }}\n                      />\n                      <LoadingButton\n                        className={style['message-sender']}\n                        type=\"primary\"\n                        loading={loading || evening}\n                        icon={<img src={enter} alt=\"enter\" />}\n                        onClick={async () => {\n                          const msg = currentMessage.trim();\n                          if (msg.length === 0) {\n                            message.warning('The content sent cannot be empty');\n                            return;\n                          }\n                          return sendMessage({ type: 'text', value: msg.trim() });\n                        }}\n                      />\n                    </Flex>\n                  </div>\n                )}\n              </>\n            )}\n            <Typography.Link className={style['term']} target=\"_blank\" href={`${getPublicPath('leapin-ai-agent')}/terms.html`}>\n              Privacy and terms\n            </Typography.Link>\n          </div>\n        )}\n      </Flex>\n    </>\n  );\n  return (\n    <Flex vertical className={classnames(className, style['chat'])}>\n      {openSide ? (\n        <Splitter\n          onResize={sizes => {\n            localStorage.setItem('LEAPIN_AI_AGENT_WINDOW_SIZES', sizes);\n            setSizes(sizes);\n          }}\n        >\n          <Splitter.Panel size={sizes[0]}>\n            {list.length > 0 ? (\n              <SimpleBar className={classnames(style['side-content-outer'], 'side-content-outer')}>\n                <SideMessage messages={list} evening={evening} />\n              </SimpleBar>\n            ) : (\n              <Flex align=\"center\" justify=\"center\" style={{ height: '100%' }}>\n                <Spin />\n              </Flex>\n            )}\n          </Splitter.Panel>\n          <Splitter.Panel size={sizes[1]}>{botBody}</Splitter.Panel>\n        </Splitter>\n      ) : (\n        botBody\n      )}\n    </Flex>\n  );\n});\n\nconst ChartBot = createWithRemoteLoader({\n  modules: ['components-core:Global@usePreset']\n})(({ remoteModules, className, apiName, id, baseUrl, token, onComplete }) => {\n  const [usePreset] = remoteModules;\n  const { apis } = usePreset();\n  const currentApis = apis.agent[apiName];\n  return (\n    <Fetch\n      {...Object.assign({}, currentApis.getSessionDetail, {\n        urlParams: { session_id: id },\n        params: { token }\n      })}\n      render={({ data, reload }) => {\n        return (\n          <ChartBotMessage\n            token={token}\n            className={className}\n            apis={currentApis}\n            sessionId={data.id}\n            startTime={data.start_time}\n            sessionName={data.session_name}\n            baseUrl={baseUrl}\n            onComplete={() => {\n              reload();\n            }}\n            openSide={data.agent.is_dynamic_output && document.documentElement.clientWidth >= 600}\n            lastTime={data.countdown_time}\n            isEnd={data.status === 2}\n            messageList={data.messages}\n            agentId={data.agent.id}\n            agentAvatar={get(data, 'agent_application.agent.avatar')}\n          />\n        );\n      }}\n    />\n  );\n});\n\nexport default ChartBot;\n\nexport { MessageList };\n"],"names":["createWithRemoteLoader","modules","_ref","remoteModules","baseUrl","code","error","usePreset","searchParams","useSearchParams","apis","_jsx","Fetch","Object","assign","agent","chatBotClient","getTokenByCode","data","get","Navigate","to","render","_ref2","_data$session","ChatBot","className","style","id","session","token","apiName","arrayEach","require","baseCreate","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isObject","isTypedArray","module","exports","object","iteratee","accumulator","isArr","isArrLike","Ctor","constructor","value","index","f","k","Symbol","for","l","m","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","Fragment","jsx","jsxs","JobCard","title","link","children","InfoPage","_jsxs","Part","Flex","justify","Button","shape","target","href","transformHTML","html","dom","document","createElement","innerHTML","results","links","querySelectorAll","slice","forEach","test","video","setAttribute","push","img","medias","media","components","map","element","outerHTML","SideMessage","messages","useRef","contentRef","output","visibleFirst","setVisibleFirst","useState","content","useMemo","last","MarkdownRender","htmlTransform","Card","length","QueueAnim","duration","interval","onEnd","muted","play","node","first","ChartBotMessage","_ref3","messageList","agentId","agentAvatar","sessionId","sessionName","startTime","lastTime","onComplete","isEnd","openSide","LoadingButton","SimpleBar","Image","loading","setLoading","evening","setEvening","list","setList","ajax","message","App","useApp","currentMessage","setCurrentMessage","isComposing","setIsComposing","messageListRef","sizes","setSizes","localStorage","inputTimer","inputRef","endHandler","useRefCallback","async","resData","saveSession","urlParams","session_id","params","status","success","isRecord","setIsRecord","useEffect","scrollTop","scrollHeight","sendMessage","_last","_ref4","prevMessageId","filter","_ref5","event","sseOptions","sendSessionMessageStream","user_selection","chat_message_id","user_content","eventEmit","newList","findIndex","_ref6","splice","chatbot_content","parseUrlParams","sse","focus","botBody","_Fragment","align","gap","flex","Avatar","src","defaultAvatar","size","vertical","Countdown","time","onClick","classnames","scrollableNodeProps","MessageList","onResend","onConditionChange","item","label","CheckList","options","onChange","Record","msg","Input","TextArea","onCompositionStart","clearTimeout","onCompositionEnd","setTimeout","disabled","autoSize","minRows","maxRows","placeholder","onKeyUp","trim","warning","icon","AudioFilled","enter","alt","Typography","Link","getPublicPath","Splitter","onResize","Panel","height","Spin","_ref7","currentApis","getSessionDetail","_ref8","reload","start_time","session_name","is_dynamic_output","documentElement","clientWidth","countdown_time"],"sourceRoot":""}