{"version":3,"file":"static/js/9739.854b5bcc.chunk.js","mappings":"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","sources":["../node_modules/lodash/transform.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js","components/ChatBot/index.js"],"sourcesContent":["var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { createWithRemoteLoader, getPublicPath } from '@kne/remote-loader';\nimport { Flex, Input, App, Spin, Splitter, Button, Card, Typography } from 'antd';\nimport { useState, useEffect, useRef, useMemo } from 'react';\nimport Fetch from '@kne/react-fetch';\nimport classnames from 'classnames';\nimport last from 'lodash/last';\nimport first from 'lodash/first';\nimport MessageList from './MessageList';\nimport useRefCallback from '@kne/use-ref-callback';\nimport { AudioFilled } from '@ant-design/icons';\nimport defaultAvatar from '../../common/defaultAvatar.png';\nimport enter from './enter.png';\nimport style from './style.module.scss';\nimport get from 'lodash/get';\nimport CheckList from './CheckList';\nimport Countdown from './Countdown';\nimport MarkdownRender from '@kne/markdown-components-render';\nimport sse from '@root/common/sse';\nimport localStorage from '@kne/local-storage';\nimport QueueAnim from 'rc-queue-anim';\nimport Record from './Record';\n\nconst JobCard = createWithRemoteLoader({\n  modules: ['components-core:InfoPage']\n})(({ remoteModules, title, link, children }) => {\n  const [InfoPage] = remoteModules;\n  return (\n    <InfoPage className={style['job-card']}>\n      <InfoPage.Part title={title}>{children}</InfoPage.Part>\n      <InfoPage>\n        <Flex justify=\"flex-end\">\n          <Button shape=\"round\" target=\"_blank\" href={link} type=\"primary\">\n            Apply\n          </Button>\n        </Flex>\n      </InfoPage>\n    </InfoPage>\n  );\n});\n\nconst transformHTML = html => {\n  const dom = document.createElement('div');\n  dom.innerHTML = html;\n  //获取所有a链接和.yaml-components节点，其他删掉\n  const results = [];\n  const links = dom.querySelectorAll('a');\n  [].slice.call(links, 0).forEach(link => {\n    if (/\\.(mp4|webm|ogv)$/i.test(link.href)) {\n      const video = document.createElement('video');\n      video.setAttribute('src', link.href);\n      video.setAttribute('controls', '');\n      results.push(video);\n    }\n    if (/\\.(jpg|jpeg|png|gif|bmp|tiff|webp)$/i.test(link.href)) {\n      const img = document.createElement('img');\n      img.setAttribute('src', link.href);\n      results.push(img);\n    }\n  });\n\n  const medias = dom.querySelectorAll('img,video');\n\n  [].slice.call(medias, 0).forEach(media => {\n    results.push(media);\n  });\n\n  const components = dom.querySelectorAll('.yaml-components');\n  results.push(...[].slice.call(components, 0));\n  return results.map(element => element.outerHTML);\n};\n\nconst SideMessage = ({ messages }) => {\n  const ref = useRef(null);\n  const contentRef = useRef({ output: '', index: -1 });\n  const [visibleFirst, setVisibleFirst] = useState(false);\n  const content = useMemo(() => {\n    return get(last(messages), 'chatbot_content') || '';\n  }, [messages]);\n\n  const render = (content, index) => {\n    return (\n      <MarkdownRender\n        htmlTransform={transformHTML}\n        components={{\n          Card,\n          JobCard\n        }}\n        render={output => {\n          if (output && output.length > 0) {\n            contentRef.current = { output, index };\n          }\n          setVisibleFirst(!(contentRef.current && contentRef.current.output && contentRef.current.output.length > 0));\n          return (\n            <QueueAnim\n              duration={1000}\n              interval={500}\n              type={['top', 'bottom']}\n              onEnd={() => {\n                const video = ref.current.querySelectorAll('video');\n                [].slice.call(video, 0).forEach(video => {\n                  video.muted = true;\n                  video.play();\n                });\n              }}\n            >\n              {contentRef.current &&\n                contentRef.current.output &&\n                contentRef.current.output.map((node, index) => {\n                  return <div key={`${contentRef.current.index}-${index}`}>{node}</div>;\n                })}\n            </QueueAnim>\n          );\n        }}\n      >\n        {content}\n      </MarkdownRender>\n    );\n  };\n\n  return (\n    <div className={style['side-content']} ref={ref}>\n      {visibleFirst ? <div key=\"first\">{render(get(first(messages), 'chatbot_content') || '', 0)}</div> : <div key=\"content\">{render(content, messages.length - 1)}</div>}\n    </div>\n  );\n};\n\nconst ChartBotMessage = createWithRemoteLoader({\n  modules: ['components-core:LoadingButton', 'components-core:Global@usePreset', 'components-core:Common@SimpleBar', 'components-core:Image']\n})(({ remoteModules, messageList, agentId, agentAvatar, sessionId, sessionName, startTime, lastTime, apis, onComplete, className, isEnd, openSide, token }) => {\n  const [LoadingButton, usePreset, SimpleBar, Image] = remoteModules;\n  const [loading, setLoading] = useState(true);\n  const [evening, setEvening] = useState(false);\n  const [list, setList] = useState(messageList || []);\n  const { ajax } = usePreset();\n  const { message } = App.useApp();\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isComposing, setIsComposing] = useState(false);\n  const messageListRef = useRef(null);\n  const [sizes, setSizes] = useState(localStorage.getItem('LEAPIN_AI_AGENT_WINDOW_SIZES') || ['70%', '30%']);\n  const inputTimer = useRef(null);\n  const inputRef = useRef(null);\n  const endHandler = useRefCallback(async () => {\n    const { data: resData } = await ajax(\n      Object.assign({}, apis.saveSession, {\n        urlParams: { session_id: sessionId },\n        params: { token },\n        data: {\n          status: 2\n        }\n      })\n    );\n    if (resData.code !== 0) {\n      return;\n    }\n    message.success('Success');\n    onComplete && onComplete();\n  });\n  const [isRecord, setIsRecord] = useState(false);\n\n  useEffect(() => {\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n  }, [list, loading]);\n  const sendMessage = useRefCallback(async ({ type, value }) => {\n    setLoading(true);\n    setEvening(true);\n    const prevMessageId = last(list.filter(({ event }) => event !== 'error'))?.id;\n\n    const sseOptions = Object.assign({}, apis.sendSessionMessageStream, {\n      urlParams: { session_id: sessionId },\n      params: { token },\n      data:\n        type === 'condition'\n          ? {\n              type,\n              user_selection: [value],\n              chat_message_id: prevMessageId\n            }\n          : {\n              type,\n              user_content: value,\n              chat_message_id: prevMessageId\n            },\n      eventEmit: data => {\n        setList(list => {\n          const newList = list.slice(0);\n          const index = newList.findIndex(({ id }) => id === data.id);\n\n          if (index === -1) {\n            newList.push(data);\n          } else {\n            newList.splice(\n              index,\n              1,\n              Object.assign({}, newList[index], data, {\n                chatbot_content: (newList[index].chatbot_content || '') + (data.chatbot_content || '')\n              })\n            );\n          }\n          return newList;\n        });\n      }\n    });\n    ajax.parseUrlParams(sseOptions);\n    await sse(sseOptions);\n    setLoading(false);\n    setCurrentMessage('');\n    setEvening(false);\n    inputRef.current && inputRef.current.focus();\n  });\n\n  useEffect(() => {\n    if (list.length === 0) {\n      sendMessage({ value: '' });\n    } else {\n      setLoading(false);\n    }\n  }, [list, sendMessage]);\n\n  const botBody = (\n    <>\n      <div className={style['title']}>\n        <Flex className={style['title-inner']} justify=\"space-between\" align=\"center\">\n          <Flex gap={8} flex={1}>\n            <Flex flex={0}>\n              <Image.Avatar src={agentAvatar || defaultAvatar} size={54} />\n            </Flex>\n            <Flex flex={1} vertical justify=\"center\">\n              <div className={style['title-content']}>{sessionName || 'Conversations'}</div>\n              {!isEnd && lastTime && (\n                <div className={style['title-time']}>\n                  <Countdown time={lastTime} onComplete={endHandler} />\n                </div>\n              )}\n            </Flex>\n          </Flex>\n          <Flex>\n            {lastTime &&\n              (!isEnd ? (\n                <LoadingButton type=\"primary\" shape=\"round\" onClick={endHandler}>\n                  End\n                </LoadingButton>\n              ) : (\n                <div className={style['over-tips']}>Conversation End</div>\n              ))}\n          </Flex>\n        </Flex>\n      </div>\n      <Flex vertical gap={8} className={style['bot-body']}>\n        <SimpleBar\n          className={classnames(style['message-list-outer'], 'message-list-scroller', {\n            [style['is-end']]: isEnd\n          })}\n          scrollableNodeProps={{ ref: messageListRef }}\n        >\n          <MessageList\n            isEnd={isEnd}\n            agentAvatar={agentAvatar}\n            list={list}\n            startTime={startTime}\n            currentMessage={loading && currentMessage}\n            onResend={data => {\n              sendMessage({ type: data.type, value: data.user_content });\n            }}\n            onConditionChange={item => {\n              setCurrentMessage(item.label);\n              sendMessage({ type: 'condition', value: item });\n            }}\n          />\n        </SimpleBar>\n        {!isEnd && (\n          <div className={style['footer']}>\n            {get(last(list), 'type') === 'condition' ? (\n              <div className={style['message-input-checklist']}>\n                <CheckList\n                  loading={loading}\n                  options={last(list).options || []}\n                  onChange={item => {\n                    setCurrentMessage(item.label);\n                    sendMessage({ type: 'condition', value: item });\n                  }}\n                />\n              </div>\n            ) : (\n              <>\n                {isRecord ? (\n                  <Record\n                    agentId={agentId}\n                    onChange={msg => {\n                      setCurrentMessage(msg);\n                    }}\n                    onComplete={msg => {\n                      setIsRecord(false);\n                      if (msg) {\n                        return sendMessage({ type: 'text', value: msg });\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className={style['message-input-border']}>\n                    <Flex className={style['message-input-outer']} align=\"center\">\n                      <Input.TextArea\n                        ref={inputRef}\n                        onCompositionStart={() => {\n                          setIsComposing(true);\n                          inputTimer.current && clearTimeout(inputTimer.current);\n                        }}\n                        onCompositionEnd={() => {\n                          inputTimer.current = setTimeout(() => {\n                            setIsComposing(false);\n                          }, 0);\n                        }}\n                        disabled={loading || evening}\n                        className={style['message-input']}\n                        autoSize={{ minRows: 1, maxRows: 6 }}\n                        placeholder=\"Ask Elsa...\"\n                        value={currentMessage}\n                        onChange={e => {\n                          setCurrentMessage(e.target.value);\n                        }}\n                        onKeyUp={e => {\n                          if (e.key === 'Enter' && !isComposing) {\n                            const msg = currentMessage.trim();\n                            setCurrentMessage(msg);\n                            if (msg.length === 0) {\n                              message.warning('The content sent cannot be empty');\n                              return;\n                            }\n                            return sendMessage({ type: 'text', value: msg });\n                          }\n                        }}\n                      />\n                      <Button\n                        size=\"small\"\n                        icon={<AudioFilled />}\n                        shape=\"circle\"\n                        type=\"link\"\n                        onClick={() => {\n                          setIsRecord(true);\n                        }}\n                      />\n                      <LoadingButton\n                        className={style['message-sender']}\n                        type=\"primary\"\n                        loading={loading || evening}\n                        icon={<img src={enter} alt=\"enter\" />}\n                        onClick={async () => {\n                          const msg = currentMessage.trim();\n                          if (msg.length === 0) {\n                            message.warning('The content sent cannot be empty');\n                            return;\n                          }\n                          return sendMessage({ type: 'text', value: msg.trim() });\n                        }}\n                      />\n                    </Flex>\n                  </div>\n                )}\n              </>\n            )}\n            <Typography.Link className={style['term']} target=\"_blank\" href={`${getPublicPath('leapin-ai-agent')}/terms.html`}>\n              Privacy and terms\n            </Typography.Link>\n          </div>\n        )}\n      </Flex>\n    </>\n  );\n  return (\n    <Flex vertical className={classnames(className, style['chat'])}>\n      {openSide ? (\n        <Splitter\n          onResize={sizes => {\n            localStorage.setItem('LEAPIN_AI_AGENT_WINDOW_SIZES', sizes);\n            setSizes(sizes);\n          }}\n        >\n          <Splitter.Panel size={sizes[0]}>\n            {list.length > 0 ? (\n              <SimpleBar className={classnames(style['side-content-outer'], 'side-content-outer')}>\n                <SideMessage messages={list} evening={evening} />\n              </SimpleBar>\n            ) : (\n              <Flex align=\"center\" justify=\"center\" style={{ height: '100%' }}>\n                <Spin />\n              </Flex>\n            )}\n          </Splitter.Panel>\n          <Splitter.Panel size={sizes[1]}>{botBody}</Splitter.Panel>\n        </Splitter>\n      ) : (\n        botBody\n      )}\n    </Flex>\n  );\n});\n\nconst ChartBot = createWithRemoteLoader({\n  modules: ['components-core:Global@usePreset']\n})(({ remoteModules, className, apiName, id, baseUrl, token, onComplete }) => {\n  const [usePreset] = remoteModules;\n  const { apis } = usePreset();\n  const currentApis = apis.agent[apiName];\n  return (\n    <Fetch\n      {...Object.assign({}, currentApis.getSessionDetail, {\n        urlParams: { session_id: id },\n        params: { token }\n      })}\n      render={({ data, reload }) => {\n        return (\n          <ChartBotMessage\n            token={token}\n            className={className}\n            apis={currentApis}\n            sessionId={data.id}\n            startTime={data.start_time}\n            sessionName={data.session_name}\n            baseUrl={baseUrl}\n            onComplete={() => {\n              reload();\n            }}\n            openSide={data.agent.is_dynamic_output && document.documentElement.clientWidth >= 600}\n            lastTime={data.countdown_time}\n            isEnd={data.status === 2}\n            messageList={data.messages}\n            agentId={data.agent.id}\n            agentAvatar={get(data, 'agent_application.agent.avatar')}\n          />\n        );\n      }}\n    />\n  );\n});\n\nexport default ChartBot;\n\nexport { MessageList };\n"],"names":["arrayEach","require","baseCreate","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isObject","isTypedArray","module","exports","object","iteratee","accumulator","isArr","isArrLike","Ctor","constructor","value","index","f","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","Fragment","jsx","jsxs","JobCard","createWithRemoteLoader","modules","_ref","remoteModules","title","link","children","InfoPage","_jsxs","className","style","_jsx","Part","Flex","justify","Button","shape","target","href","transformHTML","html","dom","document","createElement","innerHTML","results","links","querySelectorAll","slice","forEach","test","video","setAttribute","push","img","medias","media","components","map","element","outerHTML","SideMessage","_ref2","messages","useRef","contentRef","output","visibleFirst","setVisibleFirst","useState","content","useMemo","get","last","render","MarkdownRender","htmlTransform","Card","length","QueueAnim","duration","interval","onEnd","muted","play","node","first","ChartBotMessage","_ref3","messageList","agentId","agentAvatar","sessionId","sessionName","startTime","lastTime","apis","onComplete","isEnd","openSide","token","LoadingButton","usePreset","SimpleBar","Image","loading","setLoading","evening","setEvening","list","setList","ajax","message","App","useApp","currentMessage","setCurrentMessage","isComposing","setIsComposing","messageListRef","sizes","setSizes","localStorage","inputTimer","inputRef","endHandler","useRefCallback","async","data","resData","assign","saveSession","urlParams","session_id","params","status","code","success","isRecord","setIsRecord","useEffect","scrollTop","scrollHeight","sendMessage","_last","_ref4","prevMessageId","filter","_ref5","event","id","sseOptions","sendSessionMessageStream","user_selection","chat_message_id","user_content","eventEmit","newList","findIndex","_ref6","splice","chatbot_content","parseUrlParams","sse","focus","botBody","_Fragment","align","gap","flex","Avatar","src","defaultAvatar","size","vertical","Countdown","time","onClick","classnames","scrollableNodeProps","MessageList","onResend","onConditionChange","item","label","CheckList","options","onChange","Record","msg","Input","TextArea","onCompositionStart","clearTimeout","onCompositionEnd","setTimeout","disabled","autoSize","minRows","maxRows","placeholder","onKeyUp","trim","warning","icon","AudioFilled","enter","alt","Typography","Link","getPublicPath","Splitter","onResize","Panel","height","Spin","_ref7","apiName","baseUrl","currentApis","agent","Fetch","getSessionDetail","_ref8","reload","start_time","session_name","is_dynamic_output","documentElement","clientWidth","countdown_time"],"sourceRoot":""}